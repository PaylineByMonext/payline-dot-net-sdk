//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.7.2558.0.
// 
namespace SDKPaylineDotNet.DirectPaymentAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DirectPaymentAPISoapBinding", Namespace="http://impl.ws.payline.experian.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(contract[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(customPaymentPageCode[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(pointOfSell[]))]
    public partial class DirectPaymentAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback doAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCaptureOperationCompleted;
        
        private System.Threading.SendOrPostCallback doReAuthorizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback doDebitOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRefundOperationCompleted;
        
        private System.Threading.SendOrPostCallback doResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback doCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback createWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback doImmediateWalletPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback doScheduledWalletPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback doRecurrentWalletPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPaymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback disablePaymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyEnrollmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyAuthenticationOperationCompleted;
        
        private System.Threading.SendOrPostCallback doScoringChequeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEncryptionKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMerchantSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback unBlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePaymentRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBillingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateBillingRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback doBankTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback isRegisteredOperationCompleted;
        
        /// <remarks/>
        public DirectPaymentAPI() {
            this.Url = "http://host/V4/services/DirectPaymentAPI";
        }
        
        /// <remarks/>
        public event doAuthorizationCompletedEventHandler doAuthorizationCompleted;
        
        /// <remarks/>
        public event doCaptureCompletedEventHandler doCaptureCompleted;
        
        /// <remarks/>
        public event doReAuthorizationCompletedEventHandler doReAuthorizationCompleted;
        
        /// <remarks/>
        public event doDebitCompletedEventHandler doDebitCompleted;
        
        /// <remarks/>
        public event doRefundCompletedEventHandler doRefundCompleted;
        
        /// <remarks/>
        public event doResetCompletedEventHandler doResetCompleted;
        
        /// <remarks/>
        public event doCreditCompletedEventHandler doCreditCompleted;
        
        /// <remarks/>
        public event createWalletCompletedEventHandler createWalletCompleted;
        
        /// <remarks/>
        public event updateWalletCompletedEventHandler updateWalletCompleted;
        
        /// <remarks/>
        public event getWalletCompletedEventHandler getWalletCompleted;
        
        /// <remarks/>
        public event getCardsCompletedEventHandler getCardsCompleted;
        
        /// <remarks/>
        public event disableWalletCompletedEventHandler disableWalletCompleted;
        
        /// <remarks/>
        public event enableWalletCompletedEventHandler enableWalletCompleted;
        
        /// <remarks/>
        public event doImmediateWalletPaymentCompletedEventHandler doImmediateWalletPaymentCompleted;
        
        /// <remarks/>
        public event doScheduledWalletPaymentCompletedEventHandler doScheduledWalletPaymentCompleted;
        
        /// <remarks/>
        public event doRecurrentWalletPaymentCompletedEventHandler doRecurrentWalletPaymentCompleted;
        
        /// <remarks/>
        public event getPaymentRecordCompletedEventHandler getPaymentRecordCompleted;
        
        /// <remarks/>
        public event disablePaymentRecordCompletedEventHandler disablePaymentRecordCompleted;
        
        /// <remarks/>
        public event verifyEnrollmentCompletedEventHandler verifyEnrollmentCompleted;
        
        /// <remarks/>
        public event verifyAuthenticationCompletedEventHandler verifyAuthenticationCompleted;
        
        /// <remarks/>
        public event doScoringChequeCompletedEventHandler doScoringChequeCompleted;
        
        /// <remarks/>
        public event getEncryptionKeyCompletedEventHandler getEncryptionKeyCompleted;
        
        /// <remarks/>
        public event getMerchantSettingsCompletedEventHandler getMerchantSettingsCompleted;
        
        /// <remarks/>
        public event getBalanceCompletedEventHandler getBalanceCompleted;
        
        /// <remarks/>
        public event getTokenCompletedEventHandler getTokenCompleted;
        
        /// <remarks/>
        public event unBlockCompletedEventHandler unBlockCompleted;
        
        /// <remarks/>
        public event updatePaymentRecordCompletedEventHandler updatePaymentRecordCompleted;
        
        /// <remarks/>
        public event getBillingRecordCompletedEventHandler getBillingRecordCompleted;
        
        /// <remarks/>
        public event updateBillingRecordCompletedEventHandler updateBillingRecordCompleted;
        
        /// <remarks/>
        public event doBankTransferCompletedEventHandler doBankTransferCompleted;
        
        /// <remarks/>
        public event isRegisteredCompletedEventHandler isRegisteredCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doAuthorization", RequestElementName="doAuthorizationRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doAuthorization(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string transient, 
                    string version, 
                    payment payment, 
                    bankAccountData bankAccountData, 
                    card card, 
                    order order, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] owner owner, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref privateData[] privateDataList, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref authentication3DSecure authentication3DSecure, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string asynchronousRetryTimeout, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string linkedTransactionId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] threeDSInfo threeDSInfo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string travelFileNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] recurring recurring, 
                    out transaction transaction, 
                    out authorization authorization, 
                    [System.Xml.Serialization.XmlElementAttribute("card")] out cardOut card1, 
                    out extendedCardType extendedCard, 
                    out string contractNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string resultContainer) {
            object[] results = this.Invoke("doAuthorization", new object[] {
                        transient,
                        version,
                        payment,
                        bankAccountData,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        subMerchant,
                        asynchronousRetryTimeout,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber,
                        recurring});
            transient = ((string)(results[1]));
            privateDataList = ((privateData[])(results[2]));
            authentication3DSecure = ((authentication3DSecure)(results[3]));
            linkedTransactionId = ((string)(results[4]));
            travelFileNumber = ((string)(results[5]));
            transaction = ((transaction)(results[6]));
            authorization = ((authorization)(results[7]));
            card1 = ((cardOut)(results[8]));
            extendedCard = ((extendedCardType)(results[9]));
            contractNumber = ((string)(results[10]));
            resultContainer = ((string)(results[11]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoAuthorization(
                    string transient, 
                    string version, 
                    payment payment, 
                    bankAccountData bankAccountData, 
                    card card, 
                    order order, 
                    buyer buyer, 
                    owner owner, 
                    privateData[] privateDataList, 
                    authentication3DSecure authentication3DSecure, 
                    string media, 
                    subMerchant subMerchant, 
                    string asynchronousRetryTimeout, 
                    string linkedTransactionId, 
                    threeDSInfo threeDSInfo, 
                    string travelFileNumber, 
                    recurring recurring, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("doAuthorization", new object[] {
                        transient,
                        version,
                        payment,
                        bankAccountData,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        subMerchant,
                        asynchronousRetryTimeout,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber,
                        recurring}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoAuthorization(System.IAsyncResult asyncResult, out string transient, out privateData[] privateDataList, out authentication3DSecure authentication3DSecure, out string linkedTransactionId, out string travelFileNumber, out transaction transaction, out authorization authorization, out cardOut card1, out extendedCardType extendedCard, out string contractNumber, out string resultContainer) {
            object[] results = this.EndInvoke(asyncResult);
            transient = ((string)(results[1]));
            privateDataList = ((privateData[])(results[2]));
            authentication3DSecure = ((authentication3DSecure)(results[3]));
            linkedTransactionId = ((string)(results[4]));
            travelFileNumber = ((string)(results[5]));
            transaction = ((transaction)(results[6]));
            authorization = ((authorization)(results[7]));
            card1 = ((cardOut)(results[8]));
            extendedCard = ((extendedCardType)(results[9]));
            contractNumber = ((string)(results[10]));
            resultContainer = ((string)(results[11]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doAuthorizationAsync(
                    string transient, 
                    string version, 
                    payment payment, 
                    bankAccountData bankAccountData, 
                    card card, 
                    order order, 
                    buyer buyer, 
                    owner owner, 
                    privateData[] privateDataList, 
                    authentication3DSecure authentication3DSecure, 
                    string media, 
                    subMerchant subMerchant, 
                    string asynchronousRetryTimeout, 
                    string linkedTransactionId, 
                    threeDSInfo threeDSInfo, 
                    string travelFileNumber, 
                    recurring recurring) {
            this.doAuthorizationAsync(transient, version, payment, bankAccountData, card, order, buyer, owner, privateDataList, authentication3DSecure, media, subMerchant, asynchronousRetryTimeout, linkedTransactionId, threeDSInfo, travelFileNumber, recurring, null);
        }
        
        /// <remarks/>
        public void doAuthorizationAsync(
                    string transient, 
                    string version, 
                    payment payment, 
                    bankAccountData bankAccountData, 
                    card card, 
                    order order, 
                    buyer buyer, 
                    owner owner, 
                    privateData[] privateDataList, 
                    authentication3DSecure authentication3DSecure, 
                    string media, 
                    subMerchant subMerchant, 
                    string asynchronousRetryTimeout, 
                    string linkedTransactionId, 
                    threeDSInfo threeDSInfo, 
                    string travelFileNumber, 
                    recurring recurring, 
                    object userState) {
            if ((this.doAuthorizationOperationCompleted == null)) {
                this.doAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoAuthorizationOperationCompleted);
            }
            this.InvokeAsync("doAuthorization", new object[] {
                        transient,
                        version,
                        payment,
                        bankAccountData,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        subMerchant,
                        asynchronousRetryTimeout,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber,
                        recurring}, this.doAuthorizationOperationCompleted, userState);
        }
        
        private void OndoAuthorizationOperationCompleted(object arg) {
            if ((this.doAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doAuthorizationCompleted(this, new doAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doCapture", RequestElementName="doCaptureRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doCapture(string version, string transactionID, payment payment, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sequenceNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string miscData, out transaction transaction, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reAuthorization) {
            object[] results = this.Invoke("doCapture", new object[] {
                        version,
                        transactionID,
                        payment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        miscData});
            transaction = ((transaction)(results[1]));
            reAuthorization = ((string)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoCapture(string version, string transactionID, payment payment, privateData[] privateDataList, string sequenceNumber, string media, string miscData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doCapture", new object[] {
                        version,
                        transactionID,
                        payment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        miscData}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoCapture(System.IAsyncResult asyncResult, out transaction transaction, out string reAuthorization) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            reAuthorization = ((string)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doCaptureAsync(string version, string transactionID, payment payment, privateData[] privateDataList, string sequenceNumber, string media, string miscData) {
            this.doCaptureAsync(version, transactionID, payment, privateDataList, sequenceNumber, media, miscData, null);
        }
        
        /// <remarks/>
        public void doCaptureAsync(string version, string transactionID, payment payment, privateData[] privateDataList, string sequenceNumber, string media, string miscData, object userState) {
            if ((this.doCaptureOperationCompleted == null)) {
                this.doCaptureOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCaptureOperationCompleted);
            }
            this.InvokeAsync("doCapture", new object[] {
                        version,
                        transactionID,
                        payment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        miscData}, this.doCaptureOperationCompleted, userState);
        }
        
        private void OndoCaptureOperationCompleted(object arg) {
            if ((this.doCaptureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCaptureCompleted(this, new doCaptureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doReAuthorization", RequestElementName="doReAuthorizationRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doReAuthorization(string version, string transactionID, payment payment, order order, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, out transaction transaction, out cardOut card, out extendedCardType extendedCard) {
            object[] results = this.Invoke("doReAuthorization", new object[] {
                        version,
                        transactionID,
                        payment,
                        order,
                        privateDataList,
                        media});
            transaction = ((transaction)(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoReAuthorization(string version, string transactionID, payment payment, order order, privateData[] privateDataList, string media, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doReAuthorization", new object[] {
                        version,
                        transactionID,
                        payment,
                        order,
                        privateDataList,
                        media}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoReAuthorization(System.IAsyncResult asyncResult, out transaction transaction, out cardOut card, out extendedCardType extendedCard) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doReAuthorizationAsync(string version, string transactionID, payment payment, order order, privateData[] privateDataList, string media) {
            this.doReAuthorizationAsync(version, transactionID, payment, order, privateDataList, media, null);
        }
        
        /// <remarks/>
        public void doReAuthorizationAsync(string version, string transactionID, payment payment, order order, privateData[] privateDataList, string media, object userState) {
            if ((this.doReAuthorizationOperationCompleted == null)) {
                this.doReAuthorizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoReAuthorizationOperationCompleted);
            }
            this.InvokeAsync("doReAuthorization", new object[] {
                        version,
                        transactionID,
                        payment,
                        order,
                        privateDataList,
                        media}, this.doReAuthorizationOperationCompleted, userState);
        }
        
        private void OndoReAuthorizationOperationCompleted(object arg) {
            if ((this.doReAuthorizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doReAuthorizationCompleted(this, new doReAuthorizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doDebit", RequestElementName="doDebitRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doDebit(string version, payment payment, card card, order order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] owner owner, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] authentication3DSecure authentication3DSecure, authorization authorization, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, out transaction transaction, [System.Xml.Serialization.XmlElementAttribute("card")] out cardOut card1, out extendedCardType extendedCard) {
            object[] results = this.Invoke("doDebit", new object[] {
                        version,
                        payment,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        authorization,
                        media,
                        subMerchant});
            transaction = ((transaction)(results[1]));
            card1 = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoDebit(string version, payment payment, card card, order order, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, authorization authorization, string media, subMerchant subMerchant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doDebit", new object[] {
                        version,
                        payment,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        authorization,
                        media,
                        subMerchant}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoDebit(System.IAsyncResult asyncResult, out transaction transaction, out cardOut card1, out extendedCardType extendedCard) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            card1 = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doDebitAsync(string version, payment payment, card card, order order, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, authorization authorization, string media, subMerchant subMerchant) {
            this.doDebitAsync(version, payment, card, order, buyer, owner, privateDataList, authentication3DSecure, authorization, media, subMerchant, null);
        }
        
        /// <remarks/>
        public void doDebitAsync(string version, payment payment, card card, order order, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, authorization authorization, string media, subMerchant subMerchant, object userState) {
            if ((this.doDebitOperationCompleted == null)) {
                this.doDebitOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoDebitOperationCompleted);
            }
            this.InvokeAsync("doDebit", new object[] {
                        version,
                        payment,
                        card,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        authorization,
                        media,
                        subMerchant}, this.doDebitOperationCompleted, userState);
        }
        
        private void OndoDebitOperationCompleted(object arg) {
            if ((this.doDebitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doDebitCompleted(this, new doDebitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doRefund", RequestElementName="doRefundRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doRefund(string version, string transactionID, payment payment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sequenceNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("details", Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] orderDetail[] details, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string miscData, out transaction transaction, [System.Xml.Serialization.XmlArrayAttribute("miscData", IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out miscDataPair[] miscData1) {
            object[] results = this.Invoke("doRefund", new object[] {
                        version,
                        transactionID,
                        payment,
                        comment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        details,
                        miscData});
            transaction = ((transaction)(results[1]));
            miscData1 = ((miscDataPair[])(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoRefund(string version, string transactionID, payment payment, string comment, privateData[] privateDataList, string sequenceNumber, string media, orderDetail[] details, string miscData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doRefund", new object[] {
                        version,
                        transactionID,
                        payment,
                        comment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        details,
                        miscData}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoRefund(System.IAsyncResult asyncResult, out transaction transaction, out miscDataPair[] miscData1) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            miscData1 = ((miscDataPair[])(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doRefundAsync(string version, string transactionID, payment payment, string comment, privateData[] privateDataList, string sequenceNumber, string media, orderDetail[] details, string miscData) {
            this.doRefundAsync(version, transactionID, payment, comment, privateDataList, sequenceNumber, media, details, miscData, null);
        }
        
        /// <remarks/>
        public void doRefundAsync(string version, string transactionID, payment payment, string comment, privateData[] privateDataList, string sequenceNumber, string media, orderDetail[] details, string miscData, object userState) {
            if ((this.doRefundOperationCompleted == null)) {
                this.doRefundOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRefundOperationCompleted);
            }
            this.InvokeAsync("doRefund", new object[] {
                        version,
                        transactionID,
                        payment,
                        comment,
                        privateDataList,
                        sequenceNumber,
                        media,
                        details,
                        miscData}, this.doRefundOperationCompleted, userState);
        }
        
        private void OndoRefundOperationCompleted(object arg) {
            if ((this.doRefundCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRefundCompleted(this, new doRefundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doReset", RequestElementName="doResetRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doReset(string version, string transactionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string amount, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currency, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sequenceNumber, out transaction transaction) {
            object[] results = this.Invoke("doReset", new object[] {
                        version,
                        transactionID,
                        comment,
                        media,
                        amount,
                        currency,
                        privateDataList,
                        sequenceNumber});
            transaction = ((transaction)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoReset(string version, string transactionID, string comment, string media, string amount, string currency, privateData[] privateDataList, string sequenceNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doReset", new object[] {
                        version,
                        transactionID,
                        comment,
                        media,
                        amount,
                        currency,
                        privateDataList,
                        sequenceNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoReset(System.IAsyncResult asyncResult, out transaction transaction) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doResetAsync(string version, string transactionID, string comment, string media, string amount, string currency, privateData[] privateDataList, string sequenceNumber) {
            this.doResetAsync(version, transactionID, comment, media, amount, currency, privateDataList, sequenceNumber, null);
        }
        
        /// <remarks/>
        public void doResetAsync(string version, string transactionID, string comment, string media, string amount, string currency, privateData[] privateDataList, string sequenceNumber, object userState) {
            if ((this.doResetOperationCompleted == null)) {
                this.doResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoResetOperationCompleted);
            }
            this.InvokeAsync("doReset", new object[] {
                        version,
                        transactionID,
                        comment,
                        media,
                        amount,
                        currency,
                        privateDataList,
                        sequenceNumber}, this.doResetOperationCompleted, userState);
        }
        
        private void OndoResetOperationCompleted(object arg) {
            if ((this.doResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doResetCompleted(this, new doResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doCredit", RequestElementName="doCreditRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doCredit(string version, payment payment, card card, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] order order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] owner owner, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, out transaction transaction, [System.Xml.Serialization.XmlElementAttribute("card")] out cardOut card1, out extendedCardType extendedCard) {
            object[] results = this.Invoke("doCredit", new object[] {
                        version,
                        payment,
                        card,
                        comment,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        media,
                        subMerchant});
            transaction = ((transaction)(results[1]));
            card1 = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoCredit(string version, payment payment, card card, string comment, order order, buyer buyer, owner owner, privateData[] privateDataList, string media, subMerchant subMerchant, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doCredit", new object[] {
                        version,
                        payment,
                        card,
                        comment,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        media,
                        subMerchant}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoCredit(System.IAsyncResult asyncResult, out transaction transaction, out cardOut card1, out extendedCardType extendedCard) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            card1 = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doCreditAsync(string version, payment payment, card card, string comment, order order, buyer buyer, owner owner, privateData[] privateDataList, string media, subMerchant subMerchant) {
            this.doCreditAsync(version, payment, card, comment, order, buyer, owner, privateDataList, media, subMerchant, null);
        }
        
        /// <remarks/>
        public void doCreditAsync(string version, payment payment, card card, string comment, order order, buyer buyer, owner owner, privateData[] privateDataList, string media, subMerchant subMerchant, object userState) {
            if ((this.doCreditOperationCompleted == null)) {
                this.doCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoCreditOperationCompleted);
            }
            this.InvokeAsync("doCredit", new object[] {
                        version,
                        payment,
                        card,
                        comment,
                        order,
                        buyer,
                        owner,
                        privateDataList,
                        media,
                        subMerchant}, this.doCreditOperationCompleted, userState);
        }
        
        private void OndoCreditOperationCompleted(object arg) {
            if ((this.doCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doCreditCompleted(this, new doCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("createWallet", RequestElementName="createWalletRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result createWallet(string version, string contractNumber, wallet wallet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] owner owner, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] authentication3DSecure authentication3DSecure, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("contractNumberWallet", Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref string[] contractNumberWalletList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transactionID, out cardOut card, out extendedCardType extendedCard, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out fraudResultDetails fraudResultDetails) {
            object[] results = this.Invoke("createWallet", new object[] {
                        version,
                        contractNumber,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID});
            contractNumberWalletList = ((string[])(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            fraudResultDetails = ((fraudResultDetails)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincreateWallet(string version, string contractNumber, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createWallet", new object[] {
                        version,
                        contractNumber,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndcreateWallet(System.IAsyncResult asyncResult, out string[] contractNumberWalletList, out cardOut card, out extendedCardType extendedCard, out fraudResultDetails fraudResultDetails) {
            object[] results = this.EndInvoke(asyncResult);
            contractNumberWalletList = ((string[])(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            fraudResultDetails = ((fraudResultDetails)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void createWalletAsync(string version, string contractNumber, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID) {
            this.createWalletAsync(version, contractNumber, wallet, buyer, owner, privateDataList, authentication3DSecure, media, contractNumberWalletList, transactionID, null);
        }
        
        /// <remarks/>
        public void createWalletAsync(string version, string contractNumber, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID, object userState) {
            if ((this.createWalletOperationCompleted == null)) {
                this.createWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateWalletOperationCompleted);
            }
            this.InvokeAsync("createWallet", new object[] {
                        version,
                        contractNumber,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID}, this.createWalletOperationCompleted, userState);
        }
        
        private void OncreateWalletOperationCompleted(object arg) {
            if ((this.createWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createWalletCompleted(this, new createWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("updateWallet", RequestElementName="updateWalletRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result updateWallet(string version, string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, wallet wallet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] owner owner, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] authentication3DSecure authentication3DSecure, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("contractNumberWallet", Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref string[] contractNumberWalletList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transactionID, out cardOut card, out extendedCardType extendedCard) {
            object[] results = this.Invoke("updateWallet", new object[] {
                        version,
                        contractNumber,
                        cardInd,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID});
            contractNumberWalletList = ((string[])(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateWallet(string version, string contractNumber, string cardInd, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateWallet", new object[] {
                        version,
                        contractNumber,
                        cardInd,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndupdateWallet(System.IAsyncResult asyncResult, out string[] contractNumberWalletList, out cardOut card, out extendedCardType extendedCard) {
            object[] results = this.EndInvoke(asyncResult);
            contractNumberWalletList = ((string[])(results[1]));
            card = ((cardOut)(results[2]));
            extendedCard = ((extendedCardType)(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void updateWalletAsync(string version, string contractNumber, string cardInd, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID) {
            this.updateWalletAsync(version, contractNumber, cardInd, wallet, buyer, owner, privateDataList, authentication3DSecure, media, contractNumberWalletList, transactionID, null);
        }
        
        /// <remarks/>
        public void updateWalletAsync(string version, string contractNumber, string cardInd, wallet wallet, buyer buyer, owner owner, privateData[] privateDataList, authentication3DSecure authentication3DSecure, string media, string[] contractNumberWalletList, string transactionID, object userState) {
            if ((this.updateWalletOperationCompleted == null)) {
                this.updateWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWalletOperationCompleted);
            }
            this.InvokeAsync("updateWallet", new object[] {
                        version,
                        contractNumber,
                        cardInd,
                        wallet,
                        buyer,
                        owner,
                        privateDataList,
                        authentication3DSecure,
                        media,
                        contractNumberWalletList,
                        transactionID}, this.updateWalletOperationCompleted, userState);
        }
        
        private void OnupdateWalletOperationCompleted(object arg) {
            if ((this.updateWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWalletCompleted(this, new updateWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getWallet", RequestElementName="getWalletRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getWallet(string version, string contractNumber, string walletId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out wallet wallet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out owner owner, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string isDisabled, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string disableDate, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out extendedCardType extendedCard, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("contractNumberWallet", Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out string[] contractNumberWalletList) {
            object[] results = this.Invoke("getWallet", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd,
                        media});
            media = ((string)(results[1]));
            wallet = ((wallet)(results[2]));
            owner = ((owner)(results[3]));
            isDisabled = ((string)(results[4]));
            disableDate = ((string)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            extendedCard = ((extendedCardType)(results[7]));
            contractNumberWalletList = ((string[])(results[8]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetWallet(string version, string contractNumber, string walletId, string cardInd, string media, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getWallet", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd,
                        media}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetWallet(System.IAsyncResult asyncResult, out string media, out wallet wallet, out owner owner, out string isDisabled, out string disableDate, out privateData[] privateDataList, out extendedCardType extendedCard, out string[] contractNumberWalletList) {
            object[] results = this.EndInvoke(asyncResult);
            media = ((string)(results[1]));
            wallet = ((wallet)(results[2]));
            owner = ((owner)(results[3]));
            isDisabled = ((string)(results[4]));
            disableDate = ((string)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            extendedCard = ((extendedCardType)(results[7]));
            contractNumberWalletList = ((string[])(results[8]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getWalletAsync(string version, string contractNumber, string walletId, string cardInd, string media) {
            this.getWalletAsync(version, contractNumber, walletId, cardInd, media, null);
        }
        
        /// <remarks/>
        public void getWalletAsync(string version, string contractNumber, string walletId, string cardInd, string media, object userState) {
            if ((this.getWalletOperationCompleted == null)) {
                this.getWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWalletOperationCompleted);
            }
            this.InvokeAsync("getWallet", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd,
                        media}, this.getWalletOperationCompleted, userState);
        }
        
        private void OngetWalletOperationCompleted(object arg) {
            if ((this.getWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWalletCompleted(this, new getWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getCards", RequestElementName="getCardsRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getCards(string version, string contractNumber, string walletId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out cards[] cardsList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out owner owner, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList) {
            object[] results = this.Invoke("getCards", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd});
            cardsList = ((cards[])(results[1]));
            owner = ((owner)(results[2]));
            privateDataList = ((privateData[])(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCards(string version, string contractNumber, string walletId, string cardInd, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCards", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetCards(System.IAsyncResult asyncResult, out cards[] cardsList, out owner owner, out privateData[] privateDataList) {
            object[] results = this.EndInvoke(asyncResult);
            cardsList = ((cards[])(results[1]));
            owner = ((owner)(results[2]));
            privateDataList = ((privateData[])(results[3]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getCardsAsync(string version, string contractNumber, string walletId, string cardInd) {
            this.getCardsAsync(version, contractNumber, walletId, cardInd, null);
        }
        
        /// <remarks/>
        public void getCardsAsync(string version, string contractNumber, string walletId, string cardInd, object userState) {
            if ((this.getCardsOperationCompleted == null)) {
                this.getCardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCardsOperationCompleted);
            }
            this.InvokeAsync("getCards", new object[] {
                        version,
                        contractNumber,
                        walletId,
                        cardInd}, this.getCardsOperationCompleted, userState);
        }
        
        private void OngetCardsOperationCompleted(object arg) {
            if ((this.getCardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCardsCompleted(this, new getCardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("disableWallet", RequestElementName="disableWalletRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result disableWallet(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, [System.Xml.Serialization.XmlArrayItemAttribute("walletId", Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref string[] walletIdList) {
            object[] results = this.Invoke("disableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletIdList});
            walletIdList = ((string[])(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisableWallet(string contractNumber, string cardInd, string[] walletIdList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("disableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletIdList}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddisableWallet(System.IAsyncResult asyncResult, out string[] walletIdList) {
            object[] results = this.EndInvoke(asyncResult);
            walletIdList = ((string[])(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void disableWalletAsync(string contractNumber, string cardInd, string[] walletIdList) {
            this.disableWalletAsync(contractNumber, cardInd, walletIdList, null);
        }
        
        /// <remarks/>
        public void disableWalletAsync(string contractNumber, string cardInd, string[] walletIdList, object userState) {
            if ((this.disableWalletOperationCompleted == null)) {
                this.disableWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableWalletOperationCompleted);
            }
            this.InvokeAsync("disableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletIdList}, this.disableWalletOperationCompleted, userState);
        }
        
        private void OndisableWalletOperationCompleted(object arg) {
            if ((this.disableWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableWalletCompleted(this, new disableWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("enableWallet", RequestElementName="enableWalletRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result enableWallet(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, string walletId) {
            object[] results = this.Invoke("enableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletId});
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginenableWallet(string contractNumber, string cardInd, string walletId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("enableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndenableWallet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void enableWalletAsync(string contractNumber, string cardInd, string walletId) {
            this.enableWalletAsync(contractNumber, cardInd, walletId, null);
        }
        
        /// <remarks/>
        public void enableWalletAsync(string contractNumber, string cardInd, string walletId, object userState) {
            if ((this.enableWalletOperationCompleted == null)) {
                this.enableWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableWalletOperationCompleted);
            }
            this.InvokeAsync("enableWallet", new object[] {
                        contractNumber,
                        cardInd,
                        walletId}, this.enableWalletOperationCompleted, userState);
        }
        
        private void OnenableWalletOperationCompleted(object arg) {
            if ((this.enableWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableWalletCompleted(this, new enableWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doImmediateWalletPayment", RequestElementName="doImmediateWalletPaymentRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doImmediateWalletPayment(
                    string version, 
                    payment payment, 
                    order order, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, 
                    string walletId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cvx, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] recurring recurring, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref authentication3DSecure authentication3DSecure, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string linkedTransactionId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] threeDSInfo threeDSInfo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string travelFileNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out transaction transaction, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out authorization authorization) {
            object[] results = this.Invoke("doImmediateWalletPayment", new object[] {
                        version,
                        payment,
                        order,
                        buyer,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        media,
                        authentication3DSecure,
                        subMerchant,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber});
            authentication3DSecure = ((authentication3DSecure)(results[1]));
            linkedTransactionId = ((string)(results[2]));
            transaction = ((transaction)(results[3]));
            authorization = ((authorization)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoImmediateWalletPayment(
                    string version, 
                    payment payment, 
                    order order, 
                    buyer buyer, 
                    string walletId, 
                    string cardInd, 
                    string cvx, 
                    recurring recurring, 
                    privateData[] privateDataList, 
                    string media, 
                    authentication3DSecure authentication3DSecure, 
                    subMerchant subMerchant, 
                    string linkedTransactionId, 
                    threeDSInfo threeDSInfo, 
                    string travelFileNumber, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("doImmediateWalletPayment", new object[] {
                        version,
                        payment,
                        order,
                        buyer,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        media,
                        authentication3DSecure,
                        subMerchant,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoImmediateWalletPayment(System.IAsyncResult asyncResult, out authentication3DSecure authentication3DSecure, out string linkedTransactionId, out transaction transaction, out authorization authorization) {
            object[] results = this.EndInvoke(asyncResult);
            authentication3DSecure = ((authentication3DSecure)(results[1]));
            linkedTransactionId = ((string)(results[2]));
            transaction = ((transaction)(results[3]));
            authorization = ((authorization)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doImmediateWalletPaymentAsync(string version, payment payment, order order, buyer buyer, string walletId, string cardInd, string cvx, recurring recurring, privateData[] privateDataList, string media, authentication3DSecure authentication3DSecure, subMerchant subMerchant, string linkedTransactionId, threeDSInfo threeDSInfo, string travelFileNumber) {
            this.doImmediateWalletPaymentAsync(version, payment, order, buyer, walletId, cardInd, cvx, recurring, privateDataList, media, authentication3DSecure, subMerchant, linkedTransactionId, threeDSInfo, travelFileNumber, null);
        }
        
        /// <remarks/>
        public void doImmediateWalletPaymentAsync(
                    string version, 
                    payment payment, 
                    order order, 
                    buyer buyer, 
                    string walletId, 
                    string cardInd, 
                    string cvx, 
                    recurring recurring, 
                    privateData[] privateDataList, 
                    string media, 
                    authentication3DSecure authentication3DSecure, 
                    subMerchant subMerchant, 
                    string linkedTransactionId, 
                    threeDSInfo threeDSInfo, 
                    string travelFileNumber, 
                    object userState) {
            if ((this.doImmediateWalletPaymentOperationCompleted == null)) {
                this.doImmediateWalletPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoImmediateWalletPaymentOperationCompleted);
            }
            this.InvokeAsync("doImmediateWalletPayment", new object[] {
                        version,
                        payment,
                        order,
                        buyer,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        media,
                        authentication3DSecure,
                        subMerchant,
                        linkedTransactionId,
                        threeDSInfo,
                        travelFileNumber}, this.doImmediateWalletPaymentOperationCompleted, userState);
        }
        
        private void OndoImmediateWalletPaymentOperationCompleted(object arg) {
            if ((this.doImmediateWalletPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doImmediateWalletPaymentCompleted(this, new doImmediateWalletPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doScheduledWalletPayment", RequestElementName="doScheduledWalletPaymentRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doScheduledWalletPayment(string version, payment payment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string orderRef, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string orderDate, string scheduledDate, string walletId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] order order, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] recurring recurring, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] authentication3DSecure authentication3DSecure, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string linkedTransactionId, out string paymentRecordId) {
            object[] results = this.Invoke("doScheduledWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        order,
                        recurring,
                        authentication3DSecure,
                        privateDataList,
                        media,
                        subMerchant,
                        linkedTransactionId});
            paymentRecordId = ((string)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoScheduledWalletPayment(
                    string version, 
                    payment payment, 
                    string orderRef, 
                    string orderDate, 
                    string scheduledDate, 
                    string walletId, 
                    string cardInd, 
                    order order, 
                    recurring recurring, 
                    authentication3DSecure authentication3DSecure, 
                    privateData[] privateDataList, 
                    string media, 
                    subMerchant subMerchant, 
                    string linkedTransactionId, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("doScheduledWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        order,
                        recurring,
                        authentication3DSecure,
                        privateDataList,
                        media,
                        subMerchant,
                        linkedTransactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoScheduledWalletPayment(System.IAsyncResult asyncResult, out string paymentRecordId) {
            object[] results = this.EndInvoke(asyncResult);
            paymentRecordId = ((string)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doScheduledWalletPaymentAsync(string version, payment payment, string orderRef, string orderDate, string scheduledDate, string walletId, string cardInd, order order, recurring recurring, authentication3DSecure authentication3DSecure, privateData[] privateDataList, string media, subMerchant subMerchant, string linkedTransactionId) {
            this.doScheduledWalletPaymentAsync(version, payment, orderRef, orderDate, scheduledDate, walletId, cardInd, order, recurring, authentication3DSecure, privateDataList, media, subMerchant, linkedTransactionId, null);
        }
        
        /// <remarks/>
        public void doScheduledWalletPaymentAsync(string version, payment payment, string orderRef, string orderDate, string scheduledDate, string walletId, string cardInd, order order, recurring recurring, authentication3DSecure authentication3DSecure, privateData[] privateDataList, string media, subMerchant subMerchant, string linkedTransactionId, object userState) {
            if ((this.doScheduledWalletPaymentOperationCompleted == null)) {
                this.doScheduledWalletPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoScheduledWalletPaymentOperationCompleted);
            }
            this.InvokeAsync("doScheduledWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        order,
                        recurring,
                        authentication3DSecure,
                        privateDataList,
                        media,
                        subMerchant,
                        linkedTransactionId}, this.doScheduledWalletPaymentOperationCompleted, userState);
        }
        
        private void OndoScheduledWalletPaymentOperationCompleted(object arg) {
            if ((this.doScheduledWalletPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doScheduledWalletPaymentCompleted(this, new doScheduledWalletPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doRecurrentWalletPayment", RequestElementName="doRecurrentWalletPaymentRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doRecurrentWalletPayment(
                    string version, 
                    payment payment, 
                    string orderRef, 
                    string orderDate, 
                    string scheduledDate, 
                    string walletId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cardInd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cvx, 
                    recurring recurring, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] order order, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] authentication3DSecure authentication3DSecure, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string linkedTransactionId, 
                    out string paymentRecordId, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out billingRecord[] billingRecordList) {
            object[] results = this.Invoke("doRecurrentWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        order,
                        media,
                        authentication3DSecure,
                        linkedTransactionId});
            paymentRecordId = ((string)(results[1]));
            billingRecordList = ((billingRecord[])(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoRecurrentWalletPayment(
                    string version, 
                    payment payment, 
                    string orderRef, 
                    string orderDate, 
                    string scheduledDate, 
                    string walletId, 
                    string cardInd, 
                    string cvx, 
                    recurring recurring, 
                    privateData[] privateDataList, 
                    order order, 
                    string media, 
                    authentication3DSecure authentication3DSecure, 
                    string linkedTransactionId, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("doRecurrentWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        order,
                        media,
                        authentication3DSecure,
                        linkedTransactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoRecurrentWalletPayment(System.IAsyncResult asyncResult, out string paymentRecordId, out billingRecord[] billingRecordList) {
            object[] results = this.EndInvoke(asyncResult);
            paymentRecordId = ((string)(results[1]));
            billingRecordList = ((billingRecord[])(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doRecurrentWalletPaymentAsync(string version, payment payment, string orderRef, string orderDate, string scheduledDate, string walletId, string cardInd, string cvx, recurring recurring, privateData[] privateDataList, order order, string media, authentication3DSecure authentication3DSecure, string linkedTransactionId) {
            this.doRecurrentWalletPaymentAsync(version, payment, orderRef, orderDate, scheduledDate, walletId, cardInd, cvx, recurring, privateDataList, order, media, authentication3DSecure, linkedTransactionId, null);
        }
        
        /// <remarks/>
        public void doRecurrentWalletPaymentAsync(string version, payment payment, string orderRef, string orderDate, string scheduledDate, string walletId, string cardInd, string cvx, recurring recurring, privateData[] privateDataList, order order, string media, authentication3DSecure authentication3DSecure, string linkedTransactionId, object userState) {
            if ((this.doRecurrentWalletPaymentOperationCompleted == null)) {
                this.doRecurrentWalletPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoRecurrentWalletPaymentOperationCompleted);
            }
            this.InvokeAsync("doRecurrentWalletPayment", new object[] {
                        version,
                        payment,
                        orderRef,
                        orderDate,
                        scheduledDate,
                        walletId,
                        cardInd,
                        cvx,
                        recurring,
                        privateDataList,
                        order,
                        media,
                        authentication3DSecure,
                        linkedTransactionId}, this.doRecurrentWalletPaymentOperationCompleted, userState);
        }
        
        private void OndoRecurrentWalletPaymentOperationCompleted(object arg) {
            if ((this.doRecurrentWalletPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doRecurrentWalletPaymentCompleted(this, new doRecurrentWalletPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getPaymentRecord", RequestElementName="getPaymentRecordRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getPaymentRecord(string version, string contractNumber, string paymentRecordId, out recurring recurring, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string isDisabled, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string disableDate, [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out billingRecord[] billingRecordList, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out order order, out string walletId) {
            object[] results = this.Invoke("getPaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId});
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecordList = ((billingRecord[])(results[4]));
            privateDataList = ((privateData[])(results[5]));
            order = ((order)(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPaymentRecord(string version, string contractNumber, string paymentRecordId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetPaymentRecord(System.IAsyncResult asyncResult, out recurring recurring, out string isDisabled, out string disableDate, out billingRecord[] billingRecordList, out privateData[] privateDataList, out order order, out string walletId) {
            object[] results = this.EndInvoke(asyncResult);
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecordList = ((billingRecord[])(results[4]));
            privateDataList = ((privateData[])(results[5]));
            order = ((order)(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getPaymentRecordAsync(string version, string contractNumber, string paymentRecordId) {
            this.getPaymentRecordAsync(version, contractNumber, paymentRecordId, null);
        }
        
        /// <remarks/>
        public void getPaymentRecordAsync(string version, string contractNumber, string paymentRecordId, object userState) {
            if ((this.getPaymentRecordOperationCompleted == null)) {
                this.getPaymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPaymentRecordOperationCompleted);
            }
            this.InvokeAsync("getPaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId}, this.getPaymentRecordOperationCompleted, userState);
        }
        
        private void OngetPaymentRecordOperationCompleted(object arg) {
            if ((this.getPaymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPaymentRecordCompleted(this, new getPaymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("disablePaymentRecord", RequestElementName="disablePaymentRecordRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result disablePaymentRecord(string contractNumber, string paymentRecordId) {
            object[] results = this.Invoke("disablePaymentRecord", new object[] {
                        contractNumber,
                        paymentRecordId});
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindisablePaymentRecord(string contractNumber, string paymentRecordId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("disablePaymentRecord", new object[] {
                        contractNumber,
                        paymentRecordId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddisablePaymentRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void disablePaymentRecordAsync(string contractNumber, string paymentRecordId) {
            this.disablePaymentRecordAsync(contractNumber, paymentRecordId, null);
        }
        
        /// <remarks/>
        public void disablePaymentRecordAsync(string contractNumber, string paymentRecordId, object userState) {
            if ((this.disablePaymentRecordOperationCompleted == null)) {
                this.disablePaymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisablePaymentRecordOperationCompleted);
            }
            this.InvokeAsync("disablePaymentRecord", new object[] {
                        contractNumber,
                        paymentRecordId}, this.disablePaymentRecordOperationCompleted, userState);
        }
        
        private void OndisablePaymentRecordOperationCompleted(object arg) {
            if ((this.disablePaymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disablePaymentRecordCompleted(this, new disablePaymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("verifyEnrollment", RequestElementName="verifyEnrollmentRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result verifyEnrollment(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string transient, 
                    string version, 
                    card card, 
                    payment payment, 
                    string orderRef, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string mdFieldValue, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userAgent, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string walletId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string walletCardInd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string generateVirtualCvx, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string merchantName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string merchantURL, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string merchantCountryCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnURL, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] order order, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] subMerchant subMerchant, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] recurring recurring, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] threeDSInfo threeDSInfo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string merchantScore, 
                    [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref privateData[] privateDataList, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string actionUrl, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string actionMethod, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string pareqFieldName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string pareqFieldValue, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string termUrlName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string termUrlValue, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string mdFieldName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string mpiResult, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out authentication3DSecure authentication3DSecure, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string virtualCvx, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string token) {
            object[] results = this.Invoke("verifyEnrollment", new object[] {
                        transient,
                        version,
                        card,
                        payment,
                        orderRef,
                        mdFieldValue,
                        userAgent,
                        walletId,
                        walletCardInd,
                        generateVirtualCvx,
                        merchantName,
                        merchantURL,
                        merchantCountryCode,
                        returnURL,
                        order,
                        buyer,
                        subMerchant,
                        recurring,
                        threeDSInfo,
                        merchantScore,
                        privateDataList});
            transient = ((string)(results[1]));
            mdFieldValue = ((string)(results[2]));
            privateDataList = ((privateData[])(results[3]));
            actionUrl = ((string)(results[4]));
            actionMethod = ((string)(results[5]));
            pareqFieldName = ((string)(results[6]));
            pareqFieldValue = ((string)(results[7]));
            termUrlName = ((string)(results[8]));
            termUrlValue = ((string)(results[9]));
            mdFieldName = ((string)(results[10]));
            mpiResult = ((string)(results[11]));
            authentication3DSecure = ((authentication3DSecure)(results[12]));
            virtualCvx = ((string)(results[13]));
            token = ((string)(results[14]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginverifyEnrollment(
                    string transient, 
                    string version, 
                    card card, 
                    payment payment, 
                    string orderRef, 
                    string mdFieldValue, 
                    string userAgent, 
                    string walletId, 
                    string walletCardInd, 
                    string generateVirtualCvx, 
                    string merchantName, 
                    string merchantURL, 
                    string merchantCountryCode, 
                    string returnURL, 
                    order order, 
                    buyer buyer, 
                    subMerchant subMerchant, 
                    recurring recurring, 
                    threeDSInfo threeDSInfo, 
                    string merchantScore, 
                    privateData[] privateDataList, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("verifyEnrollment", new object[] {
                        transient,
                        version,
                        card,
                        payment,
                        orderRef,
                        mdFieldValue,
                        userAgent,
                        walletId,
                        walletCardInd,
                        generateVirtualCvx,
                        merchantName,
                        merchantURL,
                        merchantCountryCode,
                        returnURL,
                        order,
                        buyer,
                        subMerchant,
                        recurring,
                        threeDSInfo,
                        merchantScore,
                        privateDataList}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndverifyEnrollment(System.IAsyncResult asyncResult, out string transient, out string mdFieldValue, out privateData[] privateDataList, out string actionUrl, out string actionMethod, out string pareqFieldName, out string pareqFieldValue, out string termUrlName, out string termUrlValue, out string mdFieldName, out string mpiResult, out authentication3DSecure authentication3DSecure, out string virtualCvx, out string token) {
            object[] results = this.EndInvoke(asyncResult);
            transient = ((string)(results[1]));
            mdFieldValue = ((string)(results[2]));
            privateDataList = ((privateData[])(results[3]));
            actionUrl = ((string)(results[4]));
            actionMethod = ((string)(results[5]));
            pareqFieldName = ((string)(results[6]));
            pareqFieldValue = ((string)(results[7]));
            termUrlName = ((string)(results[8]));
            termUrlValue = ((string)(results[9]));
            mdFieldName = ((string)(results[10]));
            mpiResult = ((string)(results[11]));
            authentication3DSecure = ((authentication3DSecure)(results[12]));
            virtualCvx = ((string)(results[13]));
            token = ((string)(results[14]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void verifyEnrollmentAsync(
                    string transient, 
                    string version, 
                    card card, 
                    payment payment, 
                    string orderRef, 
                    string mdFieldValue, 
                    string userAgent, 
                    string walletId, 
                    string walletCardInd, 
                    string generateVirtualCvx, 
                    string merchantName, 
                    string merchantURL, 
                    string merchantCountryCode, 
                    string returnURL, 
                    order order, 
                    buyer buyer, 
                    subMerchant subMerchant, 
                    recurring recurring, 
                    threeDSInfo threeDSInfo, 
                    string merchantScore, 
                    privateData[] privateDataList) {
            this.verifyEnrollmentAsync(transient, version, card, payment, orderRef, mdFieldValue, userAgent, walletId, walletCardInd, generateVirtualCvx, merchantName, merchantURL, merchantCountryCode, returnURL, order, buyer, subMerchant, recurring, threeDSInfo, merchantScore, privateDataList, null);
        }
        
        /// <remarks/>
        public void verifyEnrollmentAsync(
                    string transient, 
                    string version, 
                    card card, 
                    payment payment, 
                    string orderRef, 
                    string mdFieldValue, 
                    string userAgent, 
                    string walletId, 
                    string walletCardInd, 
                    string generateVirtualCvx, 
                    string merchantName, 
                    string merchantURL, 
                    string merchantCountryCode, 
                    string returnURL, 
                    order order, 
                    buyer buyer, 
                    subMerchant subMerchant, 
                    recurring recurring, 
                    threeDSInfo threeDSInfo, 
                    string merchantScore, 
                    privateData[] privateDataList, 
                    object userState) {
            if ((this.verifyEnrollmentOperationCompleted == null)) {
                this.verifyEnrollmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyEnrollmentOperationCompleted);
            }
            this.InvokeAsync("verifyEnrollment", new object[] {
                        transient,
                        version,
                        card,
                        payment,
                        orderRef,
                        mdFieldValue,
                        userAgent,
                        walletId,
                        walletCardInd,
                        generateVirtualCvx,
                        merchantName,
                        merchantURL,
                        merchantCountryCode,
                        returnURL,
                        order,
                        buyer,
                        subMerchant,
                        recurring,
                        threeDSInfo,
                        merchantScore,
                        privateDataList}, this.verifyEnrollmentOperationCompleted, userState);
        }
        
        private void OnverifyEnrollmentOperationCompleted(object arg) {
            if ((this.verifyEnrollmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyEnrollmentCompleted(this, new verifyEnrollmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("verifyAuthentication", RequestElementName="verifyAuthenticationRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result verifyAuthentication([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string transient, string version, string contractNumber, string pares, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string md, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] card card, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out authentication3DSecure authentication3DSecure, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string mpiResult) {
            object[] results = this.Invoke("verifyAuthentication", new object[] {
                        transient,
                        version,
                        contractNumber,
                        pares,
                        md,
                        card,
                        privateDataList});
            transient = ((string)(results[1]));
            privateDataList = ((privateData[])(results[2]));
            authentication3DSecure = ((authentication3DSecure)(results[3]));
            mpiResult = ((string)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginverifyAuthentication(string transient, string version, string contractNumber, string pares, string md, card card, privateData[] privateDataList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("verifyAuthentication", new object[] {
                        transient,
                        version,
                        contractNumber,
                        pares,
                        md,
                        card,
                        privateDataList}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndverifyAuthentication(System.IAsyncResult asyncResult, out string transient, out privateData[] privateDataList, out authentication3DSecure authentication3DSecure, out string mpiResult) {
            object[] results = this.EndInvoke(asyncResult);
            transient = ((string)(results[1]));
            privateDataList = ((privateData[])(results[2]));
            authentication3DSecure = ((authentication3DSecure)(results[3]));
            mpiResult = ((string)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void verifyAuthenticationAsync(string transient, string version, string contractNumber, string pares, string md, card card, privateData[] privateDataList) {
            this.verifyAuthenticationAsync(transient, version, contractNumber, pares, md, card, privateDataList, null);
        }
        
        /// <remarks/>
        public void verifyAuthenticationAsync(string transient, string version, string contractNumber, string pares, string md, card card, privateData[] privateDataList, object userState) {
            if ((this.verifyAuthenticationOperationCompleted == null)) {
                this.verifyAuthenticationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyAuthenticationOperationCompleted);
            }
            this.InvokeAsync("verifyAuthentication", new object[] {
                        transient,
                        version,
                        contractNumber,
                        pares,
                        md,
                        card,
                        privateDataList}, this.verifyAuthenticationOperationCompleted, userState);
        }
        
        private void OnverifyAuthenticationOperationCompleted(object arg) {
            if ((this.verifyAuthenticationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyAuthenticationCompleted(this, new verifyAuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doScoringCheque", RequestElementName="doScoringChequeRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doScoringCheque(string version, payment payment, cheque cheque, order order, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string media, out transaction transaction, out scoringCheque scoringCheque) {
            object[] results = this.Invoke("doScoringCheque", new object[] {
                        version,
                        payment,
                        cheque,
                        order,
                        privateDataList,
                        media});
            transaction = ((transaction)(results[1]));
            scoringCheque = ((scoringCheque)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoScoringCheque(string version, payment payment, cheque cheque, order order, privateData[] privateDataList, string media, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doScoringCheque", new object[] {
                        version,
                        payment,
                        cheque,
                        order,
                        privateDataList,
                        media}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoScoringCheque(System.IAsyncResult asyncResult, out transaction transaction, out scoringCheque scoringCheque) {
            object[] results = this.EndInvoke(asyncResult);
            transaction = ((transaction)(results[1]));
            scoringCheque = ((scoringCheque)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doScoringChequeAsync(string version, payment payment, cheque cheque, order order, privateData[] privateDataList, string media) {
            this.doScoringChequeAsync(version, payment, cheque, order, privateDataList, media, null);
        }
        
        /// <remarks/>
        public void doScoringChequeAsync(string version, payment payment, cheque cheque, order order, privateData[] privateDataList, string media, object userState) {
            if ((this.doScoringChequeOperationCompleted == null)) {
                this.doScoringChequeOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoScoringChequeOperationCompleted);
            }
            this.InvokeAsync("doScoringCheque", new object[] {
                        version,
                        payment,
                        cheque,
                        order,
                        privateDataList,
                        media}, this.doScoringChequeOperationCompleted, userState);
        }
        
        private void OndoScoringChequeOperationCompleted(object arg) {
            if ((this.doScoringChequeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doScoringChequeCompleted(this, new doScoringChequeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getEncryptionKey", RequestElementName="getEncryptionKeyRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getEncryptionKey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, out key key) {
            object[] results = this.Invoke("getEncryptionKey", new object[] {
                        version});
            key = ((key)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetEncryptionKey(string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getEncryptionKey", new object[] {
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetEncryptionKey(System.IAsyncResult asyncResult, out key key) {
            object[] results = this.EndInvoke(asyncResult);
            key = ((key)(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getEncryptionKeyAsync(string version) {
            this.getEncryptionKeyAsync(version, null);
        }
        
        /// <remarks/>
        public void getEncryptionKeyAsync(string version, object userState) {
            if ((this.getEncryptionKeyOperationCompleted == null)) {
                this.getEncryptionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEncryptionKeyOperationCompleted);
            }
            this.InvokeAsync("getEncryptionKey", new object[] {
                        version}, this.getEncryptionKeyOperationCompleted, userState);
        }
        
        private void OngetEncryptionKeyOperationCompleted(object arg) {
            if ((this.getEncryptionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEncryptionKeyCompleted(this, new getEncryptionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getMerchantSettings", RequestElementName="getMerchantSettingsRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getMerchantSettings([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] out pointOfSell[] listPointOfSell) {
            object[] results = this.Invoke("getMerchantSettings", new object[] {
                        version});
            listPointOfSell = ((pointOfSell[])(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMerchantSettings(string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMerchantSettings", new object[] {
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetMerchantSettings(System.IAsyncResult asyncResult, out pointOfSell[] listPointOfSell) {
            object[] results = this.EndInvoke(asyncResult);
            listPointOfSell = ((pointOfSell[])(results[1]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getMerchantSettingsAsync(string version) {
            this.getMerchantSettingsAsync(version, null);
        }
        
        /// <remarks/>
        public void getMerchantSettingsAsync(string version, object userState) {
            if ((this.getMerchantSettingsOperationCompleted == null)) {
                this.getMerchantSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMerchantSettingsOperationCompleted);
            }
            this.InvokeAsync("getMerchantSettings", new object[] {
                        version}, this.getMerchantSettingsOperationCompleted, userState);
        }
        
        private void OngetMerchantSettingsOperationCompleted(object arg) {
            if ((this.getMerchantSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMerchantSettingsCompleted(this, new getMerchantSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getBalance", RequestElementName="getBalanceRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getBalance(string version, string cardID, string contractNumber, out getBalanceResponseBalance balance, out string crdproduct, out string crdprogram, out string crddesign) {
            object[] results = this.Invoke("getBalance", new object[] {
                        version,
                        cardID,
                        contractNumber});
            balance = ((getBalanceResponseBalance)(results[1]));
            crdproduct = ((string)(results[2]));
            crdprogram = ((string)(results[3]));
            crddesign = ((string)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBalance(string version, string cardID, string contractNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBalance", new object[] {
                        version,
                        cardID,
                        contractNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetBalance(System.IAsyncResult asyncResult, out getBalanceResponseBalance balance, out string crdproduct, out string crdprogram, out string crddesign) {
            object[] results = this.EndInvoke(asyncResult);
            balance = ((getBalanceResponseBalance)(results[1]));
            crdproduct = ((string)(results[2]));
            crdprogram = ((string)(results[3]));
            crddesign = ((string)(results[4]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getBalanceAsync(string version, string cardID, string contractNumber) {
            this.getBalanceAsync(version, cardID, contractNumber, null);
        }
        
        /// <remarks/>
        public void getBalanceAsync(string version, string cardID, string contractNumber, object userState) {
            if ((this.getBalanceOperationCompleted == null)) {
                this.getBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBalanceOperationCompleted);
            }
            this.InvokeAsync("getBalance", new object[] {
                        version,
                        cardID,
                        contractNumber}, this.getBalanceOperationCompleted, userState);
        }
        
        private void OngetBalanceOperationCompleted(object arg) {
            if ((this.getBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBalanceCompleted(this, new getBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getToken", RequestElementName="getTokenRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getToken(string cardNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string expirationDate, string contractNumber, out string token, out string maskedCardNumber, out string virtualCard, out string cardType, out string cardProduct, out string acceptanceNetwork, out string bank) {
            object[] results = this.Invoke("getToken", new object[] {
                        cardNumber,
                        expirationDate,
                        contractNumber});
            expirationDate = ((string)(results[1]));
            token = ((string)(results[2]));
            maskedCardNumber = ((string)(results[3]));
            virtualCard = ((string)(results[4]));
            cardType = ((string)(results[5]));
            cardProduct = ((string)(results[6]));
            acceptanceNetwork = ((string)(results[7]));
            bank = ((string)(results[8]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetToken(string cardNumber, string expirationDate, string contractNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getToken", new object[] {
                        cardNumber,
                        expirationDate,
                        contractNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetToken(System.IAsyncResult asyncResult, out string expirationDate, out string token, out string maskedCardNumber, out string virtualCard, out string cardType, out string cardProduct, out string acceptanceNetwork, out string bank) {
            object[] results = this.EndInvoke(asyncResult);
            expirationDate = ((string)(results[1]));
            token = ((string)(results[2]));
            maskedCardNumber = ((string)(results[3]));
            virtualCard = ((string)(results[4]));
            cardType = ((string)(results[5]));
            cardProduct = ((string)(results[6]));
            acceptanceNetwork = ((string)(results[7]));
            bank = ((string)(results[8]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getTokenAsync(string cardNumber, string expirationDate, string contractNumber) {
            this.getTokenAsync(cardNumber, expirationDate, contractNumber, null);
        }
        
        /// <remarks/>
        public void getTokenAsync(string cardNumber, string expirationDate, string contractNumber, object userState) {
            if ((this.getTokenOperationCompleted == null)) {
                this.getTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTokenOperationCompleted);
            }
            this.InvokeAsync("getToken", new object[] {
                        cardNumber,
                        expirationDate,
                        contractNumber}, this.getTokenOperationCompleted, userState);
        }
        
        private void OngetTokenOperationCompleted(object arg) {
            if ((this.getTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTokenCompleted(this, new getTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("unBlock", RequestElementName="unBlockRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result unBlock(string transactionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transactionDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version) {
            object[] results = this.Invoke("unBlock", new object[] {
                        transactionID,
                        transactionDate,
                        version});
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginunBlock(string transactionID, string transactionDate, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("unBlock", new object[] {
                        transactionID,
                        transactionDate,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndunBlock(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void unBlockAsync(string transactionID, string transactionDate, string version) {
            this.unBlockAsync(transactionID, transactionDate, version, null);
        }
        
        /// <remarks/>
        public void unBlockAsync(string transactionID, string transactionDate, string version, object userState) {
            if ((this.unBlockOperationCompleted == null)) {
                this.unBlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunBlockOperationCompleted);
            }
            this.InvokeAsync("unBlock", new object[] {
                        transactionID,
                        transactionDate,
                        version}, this.unBlockOperationCompleted, userState);
        }
        
        private void OnunBlockOperationCompleted(object arg) {
            if ((this.unBlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unBlockCompleted(this, new unBlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("updatePaymentRecord", RequestElementName="updatePaymentRecordRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result updatePaymentRecord([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, string contractNumber, string paymentRecordId, recurringForUpdate recurring, [System.Xml.Serialization.XmlElementAttribute("recurring")] out recurring recurring1, out string isDisabled, out string disableDate, [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList, out order order, out string walletId) {
            object[] results = this.Invoke("updatePaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId,
                        recurring});
            recurring1 = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            privateDataList = ((privateData[])(results[4]));
            order = ((order)(results[5]));
            walletId = ((string)(results[6]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdatePaymentRecord(string version, string contractNumber, string paymentRecordId, recurringForUpdate recurring, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId,
                        recurring}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndupdatePaymentRecord(System.IAsyncResult asyncResult, out recurring recurring1, out string isDisabled, out string disableDate, out privateData[] privateDataList, out order order, out string walletId) {
            object[] results = this.EndInvoke(asyncResult);
            recurring1 = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            privateDataList = ((privateData[])(results[4]));
            order = ((order)(results[5]));
            walletId = ((string)(results[6]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void updatePaymentRecordAsync(string version, string contractNumber, string paymentRecordId, recurringForUpdate recurring) {
            this.updatePaymentRecordAsync(version, contractNumber, paymentRecordId, recurring, null);
        }
        
        /// <remarks/>
        public void updatePaymentRecordAsync(string version, string contractNumber, string paymentRecordId, recurringForUpdate recurring, object userState) {
            if ((this.updatePaymentRecordOperationCompleted == null)) {
                this.updatePaymentRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePaymentRecordOperationCompleted);
            }
            this.InvokeAsync("updatePaymentRecord", new object[] {
                        version,
                        contractNumber,
                        paymentRecordId,
                        recurring}, this.updatePaymentRecordOperationCompleted, userState);
        }
        
        private void OnupdatePaymentRecordOperationCompleted(object arg) {
            if ((this.updatePaymentRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePaymentRecordCompleted(this, new updatePaymentRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getBillingRecord", RequestElementName="getBillingRecordRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result getBillingRecord(string contractNumber, string paymentRecordId, string billingRecordId, out recurring recurring, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string isDisabled, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string disableDate, out billingRecord billingRecord, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out order order, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList, out string walletId) {
            object[] results = this.Invoke("getBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId});
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecord = ((billingRecord)(results[4]));
            order = ((order)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBillingRecord(string contractNumber, string paymentRecordId, string billingRecordId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndgetBillingRecord(System.IAsyncResult asyncResult, out recurring recurring, out string isDisabled, out string disableDate, out billingRecord billingRecord, out order order, out privateData[] privateDataList, out string walletId) {
            object[] results = this.EndInvoke(asyncResult);
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecord = ((billingRecord)(results[4]));
            order = ((order)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void getBillingRecordAsync(string contractNumber, string paymentRecordId, string billingRecordId) {
            this.getBillingRecordAsync(contractNumber, paymentRecordId, billingRecordId, null);
        }
        
        /// <remarks/>
        public void getBillingRecordAsync(string contractNumber, string paymentRecordId, string billingRecordId, object userState) {
            if ((this.getBillingRecordOperationCompleted == null)) {
                this.getBillingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBillingRecordOperationCompleted);
            }
            this.InvokeAsync("getBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId}, this.getBillingRecordOperationCompleted, userState);
        }
        
        private void OngetBillingRecordOperationCompleted(object arg) {
            if ((this.getBillingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBillingRecordCompleted(this, new getBillingRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("updateBillingRecord", RequestElementName="updateBillingRecordRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result updateBillingRecord(string contractNumber, string paymentRecordId, string billingRecordId, billingRecordForUpdate billingRecordForUpdate, out recurring recurring, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string isDisabled, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string disableDate, out billingRecord billingRecord, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out order order, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] out privateData[] privateDataList, out string walletId) {
            object[] results = this.Invoke("updateBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId,
                        billingRecordForUpdate});
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecord = ((billingRecord)(results[4]));
            order = ((order)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginupdateBillingRecord(string contractNumber, string paymentRecordId, string billingRecordId, billingRecordForUpdate billingRecordForUpdate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId,
                        billingRecordForUpdate}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndupdateBillingRecord(System.IAsyncResult asyncResult, out recurring recurring, out string isDisabled, out string disableDate, out billingRecord billingRecord, out order order, out privateData[] privateDataList, out string walletId) {
            object[] results = this.EndInvoke(asyncResult);
            recurring = ((recurring)(results[1]));
            isDisabled = ((string)(results[2]));
            disableDate = ((string)(results[3]));
            billingRecord = ((billingRecord)(results[4]));
            order = ((order)(results[5]));
            privateDataList = ((privateData[])(results[6]));
            walletId = ((string)(results[7]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void updateBillingRecordAsync(string contractNumber, string paymentRecordId, string billingRecordId, billingRecordForUpdate billingRecordForUpdate) {
            this.updateBillingRecordAsync(contractNumber, paymentRecordId, billingRecordId, billingRecordForUpdate, null);
        }
        
        /// <remarks/>
        public void updateBillingRecordAsync(string contractNumber, string paymentRecordId, string billingRecordId, billingRecordForUpdate billingRecordForUpdate, object userState) {
            if ((this.updateBillingRecordOperationCompleted == null)) {
                this.updateBillingRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateBillingRecordOperationCompleted);
            }
            this.InvokeAsync("updateBillingRecord", new object[] {
                        contractNumber,
                        paymentRecordId,
                        billingRecordId,
                        billingRecordForUpdate}, this.updateBillingRecordOperationCompleted, userState);
        }
        
        private void OnupdateBillingRecordOperationCompleted(object arg) {
            if ((this.updateBillingRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateBillingRecordCompleted(this, new updateBillingRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("doBankTransfer", RequestElementName="doBankTransferRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result doBankTransfer(string version, payment payment, creditor creditor, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string comment, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string transactionID, string orderID, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] ref privateData[] privateDataList, out transaction transaction) {
            object[] results = this.Invoke("doBankTransfer", new object[] {
                        version,
                        payment,
                        creditor,
                        comment,
                        transactionID,
                        orderID,
                        privateDataList});
            privateDataList = ((privateData[])(results[1]));
            transaction = ((transaction)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindoBankTransfer(string version, payment payment, creditor creditor, string comment, string transactionID, string orderID, privateData[] privateDataList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("doBankTransfer", new object[] {
                        version,
                        payment,
                        creditor,
                        comment,
                        transactionID,
                        orderID,
                        privateDataList}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EnddoBankTransfer(System.IAsyncResult asyncResult, out privateData[] privateDataList, out transaction transaction) {
            object[] results = this.EndInvoke(asyncResult);
            privateDataList = ((privateData[])(results[1]));
            transaction = ((transaction)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void doBankTransferAsync(string version, payment payment, creditor creditor, string comment, string transactionID, string orderID, privateData[] privateDataList) {
            this.doBankTransferAsync(version, payment, creditor, comment, transactionID, orderID, privateDataList, null);
        }
        
        /// <remarks/>
        public void doBankTransferAsync(string version, payment payment, creditor creditor, string comment, string transactionID, string orderID, privateData[] privateDataList, object userState) {
            if ((this.doBankTransferOperationCompleted == null)) {
                this.doBankTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoBankTransferOperationCompleted);
            }
            this.InvokeAsync("doBankTransfer", new object[] {
                        version,
                        payment,
                        creditor,
                        comment,
                        transactionID,
                        orderID,
                        privateDataList}, this.doBankTransferOperationCompleted, userState);
        }
        
        private void OndoBankTransferOperationCompleted(object arg) {
            if ((this.doBankTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doBankTransferCompleted(this, new doBankTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("isRegistered", RequestElementName="isRegisteredRequest", RequestNamespace="http://impl.ws.payline.experian.com", ResponseNamespace="http://impl.ws.payline.experian.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public result isRegistered(string version, payment payment, order order, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://obj.ws.payline.experian.com", IsNullable=false)] privateData[] privateDataList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] buyer buyer, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string miscData, out string token, out string data) {
            object[] results = this.Invoke("isRegistered", new object[] {
                        version,
                        payment,
                        order,
                        privateDataList,
                        buyer,
                        miscData});
            token = ((string)(results[1]));
            data = ((string)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginisRegistered(string version, payment payment, order order, privateData[] privateDataList, buyer buyer, string miscData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("isRegistered", new object[] {
                        version,
                        payment,
                        order,
                        privateDataList,
                        buyer,
                        miscData}, callback, asyncState);
        }
        
        /// <remarks/>
        public result EndisRegistered(System.IAsyncResult asyncResult, out string token, out string data) {
            object[] results = this.EndInvoke(asyncResult);
            token = ((string)(results[1]));
            data = ((string)(results[2]));
            return ((result)(results[0]));
        }
        
        /// <remarks/>
        public void isRegisteredAsync(string version, payment payment, order order, privateData[] privateDataList, buyer buyer, string miscData) {
            this.isRegisteredAsync(version, payment, order, privateDataList, buyer, miscData, null);
        }
        
        /// <remarks/>
        public void isRegisteredAsync(string version, payment payment, order order, privateData[] privateDataList, buyer buyer, string miscData, object userState) {
            if ((this.isRegisteredOperationCompleted == null)) {
                this.isRegisteredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisRegisteredOperationCompleted);
            }
            this.InvokeAsync("isRegistered", new object[] {
                        version,
                        payment,
                        order,
                        privateDataList,
                        buyer,
                        miscData}, this.isRegisteredOperationCompleted, userState);
        }
        
        private void OnisRegisteredOperationCompleted(object arg) {
            if ((this.isRegisteredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isRegisteredCompleted(this, new isRegisteredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class payment {
        
        private string amountField;
        
        private string currencyField;
        
        private string actionField;
        
        private string modeField;
        
        private string contractNumberField;
        
        private string differedActionDateField;
        
        private string methodField;
        
        private string softDescriptorField;
        
        private string cardBrandField;
        
        private string registrationTokenField;
        
        private string cumulatedAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
            }
        }
        
        /// <remarks/>
        public string mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contractNumber {
            get {
                return this.contractNumberField;
            }
            set {
                this.contractNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string differedActionDate {
            get {
                return this.differedActionDateField;
            }
            set {
                this.differedActionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string softDescriptor {
            get {
                return this.softDescriptorField;
            }
            set {
                this.softDescriptorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardBrand {
            get {
                return this.cardBrandField;
            }
            set {
                this.cardBrandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string registrationToken {
            get {
                return this.registrationTokenField;
            }
            set {
                this.registrationTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cumulatedAmount {
            get {
                return this.cumulatedAmountField;
            }
            set {
                this.cumulatedAmountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class creditor {
        
        private string bicField;
        
        private string ibanField;
        
        private string nameField;
        
        /// <remarks/>
        public string bic {
            get {
                return this.bicField;
            }
            set {
                this.bicField = value;
            }
        }
        
        /// <remarks/>
        public string iban {
            get {
                return this.ibanField;
            }
            set {
                this.ibanField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class billingRecordForUpdate {
        
        private string dateField;
        
        private string amountField;
        
        private string statusField;
        
        private string executionDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string executionDate {
            get {
                return this.executionDateField;
            }
            set {
                this.executionDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class recurringForUpdate {
        
        private string billingLeftField;
        
        private string billingDayField;
        
        private string endDateField;
        
        private string newAmountField;
        
        private string amountModificationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string billingLeft {
            get {
                return this.billingLeftField;
            }
            set {
                this.billingLeftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string billingDay {
            get {
                return this.billingDayField;
            }
            set {
                this.billingDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newAmount {
            get {
                return this.newAmountField;
            }
            set {
                this.newAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amountModificationDate {
            get {
                return this.amountModificationDateField;
            }
            set {
                this.amountModificationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class key {
        
        private string keyIdField;
        
        private string modulusField;
        
        private string publicExponentField;
        
        private string expirationDateField;
        
        private string cipherField;
        
        private string algoField;
        
        private string sizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string keyId {
            get {
                return this.keyIdField;
            }
            set {
                this.keyIdField = value;
            }
        }
        
        /// <remarks/>
        public string modulus {
            get {
                return this.modulusField;
            }
            set {
                this.modulusField = value;
            }
        }
        
        /// <remarks/>
        public string publicExponent {
            get {
                return this.publicExponentField;
            }
            set {
                this.publicExponentField = value;
            }
        }
        
        /// <remarks/>
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cipher {
            get {
                return this.cipherField;
            }
            set {
                this.cipherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string algo {
            get {
                return this.algoField;
            }
            set {
                this.algoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", IsNullable=true)]
        public string size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class scoringCheque {
        
        private string chequeNumberField;
        
        private string additionalDataResponseField;
        
        private string terminalIdField;
        
        private string additionalPrivateDataField;
        
        /// <remarks/>
        public string chequeNumber {
            get {
                return this.chequeNumberField;
            }
            set {
                this.chequeNumberField = value;
            }
        }
        
        /// <remarks/>
        public string additionalDataResponse {
            get {
                return this.additionalDataResponseField;
            }
            set {
                this.additionalDataResponseField = value;
            }
        }
        
        /// <remarks/>
        public string terminalId {
            get {
                return this.terminalIdField;
            }
            set {
                this.terminalIdField = value;
            }
        }
        
        /// <remarks/>
        public string additionalPrivateData {
            get {
                return this.additionalPrivateDataField;
            }
            set {
                this.additionalPrivateDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class cheque {
        
        private string numberField;
        
        /// <remarks/>
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class billingRecord {
        
        private string dateField;
        
        private string amountField;
        
        private string statusField;
        
        private result resultField;
        
        private transaction transactionField;
        
        private authorization authorizationField;
        
        private string nbTryField;
        
        private string rankField;
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public result result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public transaction transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public authorization authorization {
            get {
                return this.authorizationField;
            }
            set {
                this.authorizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nbTry {
            get {
                return this.nbTryField;
            }
            set {
                this.nbTryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class result {
        
        private string codeField;
        
        private string shortMessageField;
        
        private string longMessageField;
        
        private string partnerCodeField;
        
        private string partnerCodeLabelField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string shortMessage {
            get {
                return this.shortMessageField;
            }
            set {
                this.shortMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string longMessage {
            get {
                return this.longMessageField;
            }
            set {
                this.longMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partnerCode {
            get {
                return this.partnerCodeField;
            }
            set {
                this.partnerCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partnerCodeLabel {
            get {
                return this.partnerCodeLabelField;
            }
            set {
                this.partnerCodeLabelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class transaction {
        
        private string idField;
        
        private string dateField;
        
        private string isDuplicatedField;
        
        private string isPossibleFraudField;
        
        private string fraudResultField;
        
        private fraudResultDetails fraudResultDetailsField;
        
        private string explanationField;
        
        private string threeDSecureField;
        
        private string softDescriptorField;
        
        private string scoreField;
        
        private scoring scoringField;
        
        private string externalWalletTypeField;
        
        private string externalWalletContractNumberField;
        
        private string partnerAdditionalDataField;
        
        private avs avsField;
        
        private string customerIdField;
        
        private string typeField;
        
        private string orderReferenceField;
        
        private payment paymentField;
        
        private pointOfSell pointOfSellField;
        
        private cardOut cardField;
        
        private extendedCardType extendedCardField;
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isDuplicated {
            get {
                return this.isDuplicatedField;
            }
            set {
                this.isDuplicatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isPossibleFraud {
            get {
                return this.isPossibleFraudField;
            }
            set {
                this.isPossibleFraudField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fraudResult {
            get {
                return this.fraudResultField;
            }
            set {
                this.fraudResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public fraudResultDetails fraudResultDetails {
            get {
                return this.fraudResultDetailsField;
            }
            set {
                this.fraudResultDetailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string explanation {
            get {
                return this.explanationField;
            }
            set {
                this.explanationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSecure {
            get {
                return this.threeDSecureField;
            }
            set {
                this.threeDSecureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string softDescriptor {
            get {
                return this.softDescriptorField;
            }
            set {
                this.softDescriptorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public scoring scoring {
            get {
                return this.scoringField;
            }
            set {
                this.scoringField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalWalletType {
            get {
                return this.externalWalletTypeField;
            }
            set {
                this.externalWalletTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string externalWalletContractNumber {
            get {
                return this.externalWalletContractNumberField;
            }
            set {
                this.externalWalletContractNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partnerAdditionalData {
            get {
                return this.partnerAdditionalDataField;
            }
            set {
                this.partnerAdditionalDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public avs avs {
            get {
                return this.avsField;
            }
            set {
                this.avsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderReference {
            get {
                return this.orderReferenceField;
            }
            set {
                this.orderReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public payment payment {
            get {
                return this.paymentField;
            }
            set {
                this.paymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public pointOfSell pointOfSell {
            get {
                return this.pointOfSellField;
            }
            set {
                this.pointOfSellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cardOut card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public extendedCardType extendedCard {
            get {
                return this.extendedCardField;
            }
            set {
                this.extendedCardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class fraudResultDetails {
        
        private string codeField;
        
        private string shortMessageField;
        
        private string longMessageField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string shortMessage {
            get {
                return this.shortMessageField;
            }
            set {
                this.shortMessageField = value;
            }
        }
        
        /// <remarks/>
        public string longMessage {
            get {
                return this.longMessageField;
            }
            set {
                this.longMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class scoring {
        
        private string partnerIdField;
        
        private string orderIdField;
        
        private string valueField;
        
        private string responseField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string partnerId {
            get {
                return this.partnerIdField;
            }
            set {
                this.partnerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderId {
            get {
                return this.orderIdField;
            }
            set {
                this.orderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class avs {
        
        private string resultField;
        
        private string resultFromAcquirerField;
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string resultFromAcquirer {
            get {
                return this.resultFromAcquirerField;
            }
            set {
                this.resultFromAcquirerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class pointOfSell {
        
        private string idField;
        
        private string siretField;
        
        private string codeMccField;
        
        private string labelField;
        
        private string webmasterEmailField;
        
        private string commentsField;
        
        private string webstoreURLField;
        
        private string notificationURLField;
        
        private string privateLifeURLField;
        
        private string saleCondURLField;
        
        private System.Nullable<bool> buyerMustAcceptSaleCondField;
        
        private bool buyerMustAcceptSaleCondFieldSpecified;
        
        private System.Nullable<bool> endOfPaymentRedirectionField;
        
        private bool endOfPaymentRedirectionFieldSpecified;
        
        private ticketSend ticketSendField;
        
        private contract[] contractsField;
        
        private virtualTerminal virtualTerminalField;
        
        private customPaymentPageCode[] customPaymentPageCodeListField;
        
        private string referenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string siret {
            get {
                return this.siretField;
            }
            set {
                this.siretField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string codeMcc {
            get {
                return this.codeMccField;
            }
            set {
                this.codeMccField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string webmasterEmail {
            get {
                return this.webmasterEmailField;
            }
            set {
                this.webmasterEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string webstoreURL {
            get {
                return this.webstoreURLField;
            }
            set {
                this.webstoreURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string notificationURL {
            get {
                return this.notificationURLField;
            }
            set {
                this.notificationURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string privateLifeURL {
            get {
                return this.privateLifeURLField;
            }
            set {
                this.privateLifeURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string saleCondURL {
            get {
                return this.saleCondURLField;
            }
            set {
                this.saleCondURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> buyerMustAcceptSaleCond {
            get {
                return this.buyerMustAcceptSaleCondField;
            }
            set {
                this.buyerMustAcceptSaleCondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool buyerMustAcceptSaleCondSpecified {
            get {
                return this.buyerMustAcceptSaleCondFieldSpecified;
            }
            set {
                this.buyerMustAcceptSaleCondFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> endOfPaymentRedirection {
            get {
                return this.endOfPaymentRedirectionField;
            }
            set {
                this.endOfPaymentRedirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endOfPaymentRedirectionSpecified {
            get {
                return this.endOfPaymentRedirectionFieldSpecified;
            }
            set {
                this.endOfPaymentRedirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ticketSend ticketSend {
            get {
                return this.ticketSendField;
            }
            set {
                this.ticketSendField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public contract[] contracts {
            get {
                return this.contractsField;
            }
            set {
                this.contractsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public virtualTerminal virtualTerminal {
            get {
                return this.virtualTerminalField;
            }
            set {
                this.virtualTerminalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public customPaymentPageCode[] customPaymentPageCodeList {
            get {
                return this.customPaymentPageCodeListField;
            }
            set {
                this.customPaymentPageCodeListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class ticketSend {
        
        private System.Nullable<bool> toBuyerField;
        
        private System.Nullable<bool> toMerchantField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> toBuyer {
            get {
                return this.toBuyerField;
            }
            set {
                this.toBuyerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> toMerchant {
            get {
                return this.toMerchantField;
            }
            set {
                this.toMerchantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class contract {
        
        private string cardTypeField;
        
        private string labelField;
        
        private string contractNumberField;
        
        private string currencyField;
        
        private contractSettlementType settlementTypeField;
        
        private System.Nullable<int> maxAmountPerTransactionField;
        
        private technicalData technicalDataField;
        
        private bankAccount bankAccountField;
        
        private interlocutor acquirerInterlocutorField;
        
        private string descriptionField;
        
        private bool logoEnableField;
        
        private string smallLogoMimeField;
        
        private byte[] smallLogoField;
        
        private string normalLogoMimeField;
        
        private byte[] normalLogoField;
        
        private contribution contributionField;
        
        private string enrolment3DSField;
        
        public contract() {
            this.settlementTypeField = contractSettlementType.Manual;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contractNumber {
            get {
                return this.contractNumberField;
            }
            set {
                this.contractNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public contractSettlementType settlementType {
            get {
                return this.settlementTypeField;
            }
            set {
                this.settlementTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> maxAmountPerTransaction {
            get {
                return this.maxAmountPerTransactionField;
            }
            set {
                this.maxAmountPerTransactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public technicalData technicalData {
            get {
                return this.technicalDataField;
            }
            set {
                this.technicalDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public bankAccount bankAccount {
            get {
                return this.bankAccountField;
            }
            set {
                this.bankAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public interlocutor acquirerInterlocutor {
            get {
                return this.acquirerInterlocutorField;
            }
            set {
                this.acquirerInterlocutorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool logoEnable {
            get {
                return this.logoEnableField;
            }
            set {
                this.logoEnableField = value;
            }
        }
        
        /// <remarks/>
        public string smallLogoMime {
            get {
                return this.smallLogoMimeField;
            }
            set {
                this.smallLogoMimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] smallLogo {
            get {
                return this.smallLogoField;
            }
            set {
                this.smallLogoField = value;
            }
        }
        
        /// <remarks/>
        public string normalLogoMime {
            get {
                return this.normalLogoMimeField;
            }
            set {
                this.normalLogoMimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] normalLogo {
            get {
                return this.normalLogoField;
            }
            set {
                this.normalLogoField = value;
            }
        }
        
        /// <remarks/>
        public contribution contribution {
            get {
                return this.contributionField;
            }
            set {
                this.contributionField = value;
            }
        }
        
        /// <remarks/>
        public string enrolment3DS {
            get {
                return this.enrolment3DSField;
            }
            set {
                this.enrolment3DSField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://obj.ws.payline.experian.com")]
    public enum contractSettlementType {
        
        /// <remarks/>
        Manual,
        
        /// <remarks/>
        Now,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1Day")]
        Item1Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2Day")]
        Item2Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3Day")]
        Item3Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4Day")]
        Item4Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("5Day")]
        Item5Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6Day")]
        Item6Day,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("7Day")]
        Item7Day,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class technicalData {
        
        private string terminalNumberField;
        
        private string gTInstanceField;
        
        private string paymentProfilField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string terminalNumber {
            get {
                return this.terminalNumberField;
            }
            set {
                this.terminalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GTInstance {
            get {
                return this.gTInstanceField;
            }
            set {
                this.gTInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string paymentProfil {
            get {
                return this.paymentProfilField;
            }
            set {
                this.paymentProfilField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class bankAccount {
        
        private string bankCodeField;
        
        private string bankNumberField;
        
        private iban ibanField;
        
        private rib ribField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bankNumber {
            get {
                return this.bankNumberField;
            }
            set {
                this.bankNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public iban iban {
            get {
                return this.ibanField;
            }
            set {
                this.ibanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public rib rib {
            get {
                return this.ribField;
            }
            set {
                this.ribField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class iban {
        
        private string countryCodeField;
        
        private string checkKeyField;
        
        private string bBANField;
        
        private string bICField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string checkKey {
            get {
                return this.checkKeyField;
            }
            set {
                this.checkKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BBAN {
            get {
                return this.bBANField;
            }
            set {
                this.bBANField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BIC {
            get {
                return this.bICField;
            }
            set {
                this.bICField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class rib {
        
        private string tellerCodeField;
        
        private string accountNumberField;
        
        private string keyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string tellerCode {
            get {
                return this.tellerCodeField;
            }
            set {
                this.tellerCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class interlocutor {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string phoneField;
        
        private string mobileField;
        
        private string faxField;
        
        private addressInterlocutor addressInterlocutorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public addressInterlocutor addressInterlocutor {
            get {
                return this.addressInterlocutorField;
            }
            set {
                this.addressInterlocutorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class addressInterlocutor {
        
        private string street1Field;
        
        private string street2Field;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private string countryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street1 {
            get {
                return this.street1Field;
            }
            set {
                this.street1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class contribution {
        
        private bool enableField;
        
        private string typeField;
        
        private string valueField;
        
        private string nbFreeTransactionField;
        
        private string minAmountTransactionField;
        
        private string maxAmountTransactionField;
        
        /// <remarks/>
        public bool enable {
            get {
                return this.enableField;
            }
            set {
                this.enableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string nbFreeTransaction {
            get {
                return this.nbFreeTransactionField;
            }
            set {
                this.nbFreeTransactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string minAmountTransaction {
            get {
                return this.minAmountTransactionField;
            }
            set {
                this.minAmountTransactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string maxAmountTransaction {
            get {
                return this.maxAmountTransactionField;
            }
            set {
                this.maxAmountTransactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class virtualTerminal {
        
        private string labelField;
        
        private int inactivityDelayField;
        
        private string logoField;
        
        private virtualTerminalFunction[] functionsField;
        
        public virtualTerminal() {
            this.inactivityDelayField = 10;
        }
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public int inactivityDelay {
            get {
                return this.inactivityDelayField;
            }
            set {
                this.inactivityDelayField = value;
            }
        }
        
        /// <remarks/>
        public string logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("function", IsNullable=false)]
        public virtualTerminalFunction[] functions {
            get {
                return this.functionsField;
            }
            set {
                this.functionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class virtualTerminalFunction {
        
        private virtualTerminalFunctionFunction functionField;
        
        private string labelField;
        
        private virtualTerminalFunctionFunctionParameter[] functionParameterField;
        
        /// <remarks/>
        public virtualTerminalFunctionFunction function {
            get {
                return this.functionField;
            }
            set {
                this.functionField = value;
            }
        }
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("functionParameter")]
        public virtualTerminalFunctionFunctionParameter[] functionParameter {
            get {
                return this.functionParameterField;
            }
            set {
                this.functionParameterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://obj.ws.payline.experian.com")]
    public enum virtualTerminalFunctionFunction {
        
        /// <remarks/>
        simplePayment,
        
        /// <remarks/>
        walletCreation,
        
        /// <remarks/>
        nXPayment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://obj.ws.payline.experian.com")]
    public partial class virtualTerminalFunctionFunctionParameter {
        
        private string idField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class customPaymentPageCode {
        
        private string codeField;
        
        private string labelField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class cardOut {
        
        private string numberField;
        
        private string typeField;
        
        private string expirationDateField;
        
        private string cardholderField;
        
        private string tokenField;
        
        private string panTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardholder {
            get {
                return this.cardholderField;
            }
            set {
                this.cardholderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string panType {
            get {
                return this.panTypeField;
            }
            set {
                this.panTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class extendedCardType {
        
        private string countryField;
        
        private string isCvdField;
        
        private string bankField;
        
        private string typeField;
        
        private string networkField;
        
        private string productField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isCvd {
            get {
                return this.isCvdField;
            }
            set {
                this.isCvdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bank {
            get {
                return this.bankField;
            }
            set {
                this.bankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class authorization {
        
        private string numberField;
        
        private string dateField;
        
        private string authorizedAmountField;
        
        private string authorizedCurrencyField;
        
        /// <remarks/>
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authorizedAmount {
            get {
                return this.authorizedAmountField;
            }
            set {
                this.authorizedAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authorizedCurrency {
            get {
                return this.authorizedCurrencyField;
            }
            set {
                this.authorizedCurrencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class cards {
        
        private string walletIdField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string emailField;
        
        private address shippingAddressField;
        
        private card cardField;
        
        private string cardIndField;
        
        private string commentField;
        
        private string isDisabledField;
        
        private string disableDateField;
        
        private extendedCardType extendedCardField;
        
        private string defaultField;
        
        /// <remarks/>
        public string walletId {
            get {
                return this.walletIdField;
            }
            set {
                this.walletIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public address shippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public card card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardInd {
            get {
                return this.cardIndField;
            }
            set {
                this.cardIndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isDisabled {
            get {
                return this.isDisabledField;
            }
            set {
                this.isDisabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string disableDate {
            get {
                return this.disableDateField;
            }
            set {
                this.disableDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public extendedCardType extendedCard {
            get {
                return this.extendedCardField;
            }
            set {
                this.extendedCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class address {
        
        private string titleField;
        
        private string nameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string street1Field;
        
        private string street2Field;
        
        private string streetNumberField;
        
        private string cityNameField;
        
        private string zipCodeField;
        
        private string countryField;
        
        private string phoneField;
        
        private string stateField;
        
        private string countyField;
        
        private string phoneTypeField;
        
        private string addressCreateDateField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street1 {
            get {
                return this.street1Field;
            }
            set {
                this.street1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string streetNumber {
            get {
                return this.streetNumberField;
            }
            set {
                this.streetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phoneType {
            get {
                return this.phoneTypeField;
            }
            set {
                this.phoneTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string addressCreateDate {
            get {
                return this.addressCreateDateField;
            }
            set {
                this.addressCreateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class card {
        
        private string encryptionKeyIdField;
        
        private string encryptedDataField;
        
        private string numberField;
        
        private string typeField;
        
        private string expirationDateField;
        
        private string cvxField;
        
        private string ownerBirthdayDateField;
        
        private string passwordField;
        
        private string cardPresentField;
        
        private string cardholderField;
        
        private string tokenField;
        
        private paymentData paymentDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string encryptionKeyId {
            get {
                return this.encryptionKeyIdField;
            }
            set {
                this.encryptionKeyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string encryptedData {
            get {
                return this.encryptedDataField;
            }
            set {
                this.encryptedDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cvx {
            get {
                return this.cvxField;
            }
            set {
                this.cvxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ownerBirthdayDate {
            get {
                return this.ownerBirthdayDateField;
            }
            set {
                this.ownerBirthdayDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardPresent {
            get {
                return this.cardPresentField;
            }
            set {
                this.cardPresentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardholder {
            get {
                return this.cardholderField;
            }
            set {
                this.cardholderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public paymentData paymentData {
            get {
                return this.paymentDataField;
            }
            set {
                this.paymentDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class paymentData {
        
        private string transactionIDField;
        
        private string networkField;
        
        private string tokenDataField;
        
        /// <remarks/>
        public string transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string network {
            get {
                return this.networkField;
            }
            set {
                this.networkField = value;
            }
        }
        
        /// <remarks/>
        public string tokenData {
            get {
                return this.tokenDataField;
            }
            set {
                this.tokenDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class wallet {
        
        private string walletIdField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string emailField;
        
        private address shippingAddressField;
        
        private card cardField;
        
        private string commentField;
        
        private string defaultField;
        
        private string cardStatusField;
        
        private string cardBrandField;
        
        /// <remarks/>
        public string walletId {
            get {
                return this.walletIdField;
            }
            set {
                this.walletIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public address shippingAddress {
            get {
                return this.shippingAddressField;
            }
            set {
                this.shippingAddressField = value;
            }
        }
        
        /// <remarks/>
        public card card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @default {
            get {
                return this.defaultField;
            }
            set {
                this.defaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardStatus {
            get {
                return this.cardStatusField;
            }
            set {
                this.cardStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardBrand {
            get {
                return this.cardBrandField;
            }
            set {
                this.cardBrandField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class miscDataPair {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class recurring {
        
        private string firstAmountField;
        
        private string amountField;
        
        private string billingCycleField;
        
        private string billingLeftField;
        
        private string billingDayField;
        
        private string startDateField;
        
        private string endDateField;
        
        private string newAmountField;
        
        private string amountModificationDateField;
        
        private string billingRankField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstAmount {
            get {
                return this.firstAmountField;
            }
            set {
                this.firstAmountField = value;
            }
        }
        
        /// <remarks/>
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string billingCycle {
            get {
                return this.billingCycleField;
            }
            set {
                this.billingCycleField = value;
            }
        }
        
        /// <remarks/>
        public string billingLeft {
            get {
                return this.billingLeftField;
            }
            set {
                this.billingLeftField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string billingDay {
            get {
                return this.billingDayField;
            }
            set {
                this.billingDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newAmount {
            get {
                return this.newAmountField;
            }
            set {
                this.newAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amountModificationDate {
            get {
                return this.amountModificationDateField;
            }
            set {
                this.amountModificationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string billingRank {
            get {
                return this.billingRankField;
            }
            set {
                this.billingRankField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class sdk {
        
        private string deviceRenderingOptionsIFField;
        
        private string deviceRenderOptionsUIField;
        
        private string appIDField;
        
        private string ephemPubKeyField;
        
        private string maxTimeoutField;
        
        private string referenceNumberField;
        
        private string transIDField;
        
        private string encDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deviceRenderingOptionsIF {
            get {
                return this.deviceRenderingOptionsIFField;
            }
            set {
                this.deviceRenderingOptionsIFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deviceRenderOptionsUI {
            get {
                return this.deviceRenderOptionsUIField;
            }
            set {
                this.deviceRenderOptionsUIField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string appID {
            get {
                return this.appIDField;
            }
            set {
                this.appIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ephemPubKey {
            get {
                return this.ephemPubKeyField;
            }
            set {
                this.ephemPubKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string maxTimeout {
            get {
                return this.maxTimeoutField;
            }
            set {
                this.maxTimeoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string referenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string transID {
            get {
                return this.transIDField;
            }
            set {
                this.transIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string encData {
            get {
                return this.encDataField;
            }
            set {
                this.encDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class browser {
        
        private string acceptHeaderField;
        
        private string javaEnabledField;
        
        private string javascriptEnabledField;
        
        private string languageField;
        
        private string colorDepthField;
        
        private string screenHeightField;
        
        private string screenWidthField;
        
        private string timeZoneOffsetField;
        
        private string userAgentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string acceptHeader {
            get {
                return this.acceptHeaderField;
            }
            set {
                this.acceptHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string javaEnabled {
            get {
                return this.javaEnabledField;
            }
            set {
                this.javaEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string javascriptEnabled {
            get {
                return this.javascriptEnabledField;
            }
            set {
                this.javascriptEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string colorDepth {
            get {
                return this.colorDepthField;
            }
            set {
                this.colorDepthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string screenHeight {
            get {
                return this.screenHeightField;
            }
            set {
                this.screenHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string screenWidth {
            get {
                return this.screenWidthField;
            }
            set {
                this.screenWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string timeZoneOffset {
            get {
                return this.timeZoneOffsetField;
            }
            set {
                this.timeZoneOffsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userAgent {
            get {
                return this.userAgentField;
            }
            set {
                this.userAgentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class threeDSInfo {
        
        private string challengeIndField;
        
        private string threeDSReqPriorAuthDataField;
        
        private string threeDSReqPriorAuthMethodField;
        
        private string threeDSReqPriorAuthTimestampField;
        
        private browser browserField;
        
        private sdk sdkField;
        
        private string threeDSMethodNotificationURLField;
        
        private string threeDSMethodResultField;
        
        private string challengeWindowSizeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string challengeInd {
            get {
                return this.challengeIndField;
            }
            set {
                this.challengeIndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSReqPriorAuthData {
            get {
                return this.threeDSReqPriorAuthDataField;
            }
            set {
                this.threeDSReqPriorAuthDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSReqPriorAuthMethod {
            get {
                return this.threeDSReqPriorAuthMethodField;
            }
            set {
                this.threeDSReqPriorAuthMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSReqPriorAuthTimestamp {
            get {
                return this.threeDSReqPriorAuthTimestampField;
            }
            set {
                this.threeDSReqPriorAuthTimestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public browser browser {
            get {
                return this.browserField;
            }
            set {
                this.browserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public sdk sdk {
            get {
                return this.sdkField;
            }
            set {
                this.sdkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSMethodNotificationURL {
            get {
                return this.threeDSMethodNotificationURLField;
            }
            set {
                this.threeDSMethodNotificationURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string threeDSMethodResult {
            get {
                return this.threeDSMethodResultField;
            }
            set {
                this.threeDSMethodResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string challengeWindowSize {
            get {
                return this.challengeWindowSizeField;
            }
            set {
                this.challengeWindowSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class subMerchant {
        
        private string subMerchantIdField;
        
        private string subMerchantNameField;
        
        private string subMerchantMCCField;
        
        private string subMerchantSIRETField;
        
        private string subMerchantTaxCodeField;
        
        private string subMerchantStreetField;
        
        private string subMerchantCityField;
        
        private string subMerchantZipCodeField;
        
        private string subMerchantCountryField;
        
        private string subMerchantStateField;
        
        private string subMerchantEmailAddressField;
        
        private string subMerchantPhoneNumberField;
        
        /// <remarks/>
        public string subMerchantId {
            get {
                return this.subMerchantIdField;
            }
            set {
                this.subMerchantIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantName {
            get {
                return this.subMerchantNameField;
            }
            set {
                this.subMerchantNameField = value;
            }
        }
        
        /// <remarks/>
        public string subMerchantMCC {
            get {
                return this.subMerchantMCCField;
            }
            set {
                this.subMerchantMCCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantSIRET {
            get {
                return this.subMerchantSIRETField;
            }
            set {
                this.subMerchantSIRETField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantTaxCode {
            get {
                return this.subMerchantTaxCodeField;
            }
            set {
                this.subMerchantTaxCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantStreet {
            get {
                return this.subMerchantStreetField;
            }
            set {
                this.subMerchantStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantCity {
            get {
                return this.subMerchantCityField;
            }
            set {
                this.subMerchantCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantZipCode {
            get {
                return this.subMerchantZipCodeField;
            }
            set {
                this.subMerchantZipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantCountry {
            get {
                return this.subMerchantCountryField;
            }
            set {
                this.subMerchantCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantState {
            get {
                return this.subMerchantStateField;
            }
            set {
                this.subMerchantStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantEmailAddress {
            get {
                return this.subMerchantEmailAddressField;
            }
            set {
                this.subMerchantEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subMerchantPhoneNumber {
            get {
                return this.subMerchantPhoneNumberField;
            }
            set {
                this.subMerchantPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class authentication3DSecure {
        
        private string mdField;
        
        private string paresField;
        
        private string xidField;
        
        private string eciField;
        
        private string cavvField;
        
        private string cavvAlgorithmField;
        
        private string vadsResultField;
        
        private string typeSecurisationField;
        
        private string paResStatusField;
        
        private string veResStatusField;
        
        private string resultContainerField;
        
        private string authenticationResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string md {
            get {
                return this.mdField;
            }
            set {
                this.mdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pares {
            get {
                return this.paresField;
            }
            set {
                this.paresField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string xid {
            get {
                return this.xidField;
            }
            set {
                this.xidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string eci {
            get {
                return this.eciField;
            }
            set {
                this.eciField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cavv {
            get {
                return this.cavvField;
            }
            set {
                this.cavvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cavvAlgorithm {
            get {
                return this.cavvAlgorithmField;
            }
            set {
                this.cavvAlgorithmField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string vadsResult {
            get {
                return this.vadsResultField;
            }
            set {
                this.vadsResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string typeSecurisation {
            get {
                return this.typeSecurisationField;
            }
            set {
                this.typeSecurisationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaResStatus {
            get {
                return this.paResStatusField;
            }
            set {
                this.paResStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VeResStatus {
            get {
                return this.veResStatusField;
            }
            set {
                this.veResStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string resultContainer {
            get {
                return this.resultContainerField;
            }
            set {
                this.resultContainerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string authenticationResult {
            get {
                return this.authenticationResultField;
            }
            set {
                this.authenticationResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class privateData {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class addressOwner {
        
        private string streetField;
        
        private string cityNameField;
        
        private string zipCodeField;
        
        private string countryField;
        
        private string phoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string zipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class owner {
        
        private string lastNameField;
        
        private string firstNameField;
        
        private addressOwner billingAddressField;
        
        private string issueCardDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public addressOwner billingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string issueCardDate {
            get {
                return this.issueCardDateField;
            }
            set {
                this.issueCardDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class merchantAuthentication {
        
        private string methodField;
        
        private string dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class buyer {
        
        private string titleField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string emailField;
        
        private address shippingAdressField;
        
        private address billingAddressField;
        
        private string accountCreateDateField;
        
        private string accountAverageAmountField;
        
        private string accountOrderCountField;
        
        private string walletIdField;
        
        private string walletDisplayedField;
        
        private string walletSecuredField;
        
        private string walletCardIndField;
        
        private string ipField;
        
        private string mobilePhoneField;
        
        private string customerIdField;
        
        private string legalStatusField;
        
        private string legalDocumentTypeField;
        
        private string legalDocumentField;
        
        private string birthDateField;
        
        private string fingerprintIDField;
        
        private string deviceFingerprintField;
        
        private string isBotField;
        
        private string isIncognitoField;
        
        private string isBehindProxyField;
        
        private string isFromTorField;
        
        private string isEmulatorField;
        
        private string isRootedField;
        
        private string hasTimezoneMismatchField;
        
        private string loyaltyMemberTypeField;
        
        private string buyerExtendedField;
        
        private merchantAuthentication merchantAuthenticationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public address shippingAdress {
            get {
                return this.shippingAdressField;
            }
            set {
                this.shippingAdressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public address billingAddress {
            get {
                return this.billingAddressField;
            }
            set {
                this.billingAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountCreateDate {
            get {
                return this.accountCreateDateField;
            }
            set {
                this.accountCreateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountAverageAmount {
            get {
                return this.accountAverageAmountField;
            }
            set {
                this.accountAverageAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountOrderCount {
            get {
                return this.accountOrderCountField;
            }
            set {
                this.accountOrderCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string walletId {
            get {
                return this.walletIdField;
            }
            set {
                this.walletIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string walletDisplayed {
            get {
                return this.walletDisplayedField;
            }
            set {
                this.walletDisplayedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string walletSecured {
            get {
                return this.walletSecuredField;
            }
            set {
                this.walletSecuredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string walletCardInd {
            get {
                return this.walletCardIndField;
            }
            set {
                this.walletCardIndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ip {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string customerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string legalStatus {
            get {
                return this.legalStatusField;
            }
            set {
                this.legalStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string legalDocumentType {
            get {
                return this.legalDocumentTypeField;
            }
            set {
                this.legalDocumentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string legalDocument {
            get {
                return this.legalDocumentField;
            }
            set {
                this.legalDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string birthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fingerprintID {
            get {
                return this.fingerprintIDField;
            }
            set {
                this.fingerprintIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deviceFingerprint {
            get {
                return this.deviceFingerprintField;
            }
            set {
                this.deviceFingerprintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isBot {
            get {
                return this.isBotField;
            }
            set {
                this.isBotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isIncognito {
            get {
                return this.isIncognitoField;
            }
            set {
                this.isIncognitoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isBehindProxy {
            get {
                return this.isBehindProxyField;
            }
            set {
                this.isBehindProxyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isFromTor {
            get {
                return this.isFromTorField;
            }
            set {
                this.isFromTorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isEmulator {
            get {
                return this.isEmulatorField;
            }
            set {
                this.isEmulatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isRooted {
            get {
                return this.isRootedField;
            }
            set {
                this.isRootedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string hasTimezoneMismatch {
            get {
                return this.hasTimezoneMismatchField;
            }
            set {
                this.hasTimezoneMismatchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string loyaltyMemberType {
            get {
                return this.loyaltyMemberTypeField;
            }
            set {
                this.loyaltyMemberTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string buyerExtended {
            get {
                return this.buyerExtendedField;
            }
            set {
                this.buyerExtendedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public merchantAuthentication merchantAuthentication {
            get {
                return this.merchantAuthenticationField;
            }
            set {
                this.merchantAuthenticationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class orderDetail {
        
        private string refField;
        
        private string priceField;
        
        private string quantityField;
        
        private string commentField;
        
        private string categoryField;
        
        private string brandField;
        
        private string subcategory1Field;
        
        private string subcategory2Field;
        
        private string additionalDataField;
        
        private string taxRateField;
        
        private string sellerField;
        
        private string sellerTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subcategory1 {
            get {
                return this.subcategory1Field;
            }
            set {
                this.subcategory1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subcategory2 {
            get {
                return this.subcategory2Field;
            }
            set {
                this.subcategory2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string additionalData {
            get {
                return this.additionalDataField;
            }
            set {
                this.additionalDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string seller {
            get {
                return this.sellerField;
            }
            set {
                this.sellerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sellerType {
            get {
                return this.sellerTypeField;
            }
            set {
                this.sellerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class order {
        
        private string refField;
        
        private string originField;
        
        private string countryField;
        
        private string taxesField;
        
        private string amountField;
        
        private string currencyField;
        
        private string dateField;
        
        private orderDetail[] detailsField;
        
        private string deliveryTimeField;
        
        private string deliveryModeField;
        
        private string deliveryExpectedDateField;
        
        private string deliveryExpectedDelayField;
        
        private string deliveryChargeField;
        
        private string discountAmountField;
        
        private string otaPackageTypeField;
        
        private string otaDestinationCountryField;
        
        private string bookingReferenceField;
        
        private string orderDetailField;
        
        private string orderExtendedField;
        
        private string orderOTAField;
        
        /// <remarks/>
        public string @ref {
            get {
                return this.refField;
            }
            set {
                this.refField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string taxes {
            get {
                return this.taxesField;
            }
            set {
                this.taxesField = value;
            }
        }
        
        /// <remarks/>
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("details", IsNullable=false)]
        public orderDetail[] details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryTime {
            get {
                return this.deliveryTimeField;
            }
            set {
                this.deliveryTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryMode {
            get {
                return this.deliveryModeField;
            }
            set {
                this.deliveryModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryExpectedDate {
            get {
                return this.deliveryExpectedDateField;
            }
            set {
                this.deliveryExpectedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryExpectedDelay {
            get {
                return this.deliveryExpectedDelayField;
            }
            set {
                this.deliveryExpectedDelayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string deliveryCharge {
            get {
                return this.deliveryChargeField;
            }
            set {
                this.deliveryChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string discountAmount {
            get {
                return this.discountAmountField;
            }
            set {
                this.discountAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string otaPackageType {
            get {
                return this.otaPackageTypeField;
            }
            set {
                this.otaPackageTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string otaDestinationCountry {
            get {
                return this.otaDestinationCountryField;
            }
            set {
                this.otaDestinationCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bookingReference {
            get {
                return this.bookingReferenceField;
            }
            set {
                this.bookingReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderDetail {
            get {
                return this.orderDetailField;
            }
            set {
                this.orderDetailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderExtended {
            get {
                return this.orderExtendedField;
            }
            set {
                this.orderExtendedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string orderOTA {
            get {
                return this.orderOTAField;
            }
            set {
                this.orderOTAField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://obj.ws.payline.experian.com")]
    public partial class bankAccountData {
        
        private string countryCodeField;
        
        private string bankCodeField;
        
        private string accountNumberField;
        
        private string keyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://impl.ws.payline.experian.com")]
    public partial class getBalanceResponseBalance {
        
        private string amountField;
        
        private string currencyField;
        
        /// <remarks/>
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doAuthorizationCompletedEventHandler(object sender, doAuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string transient {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public authentication3DSecure authentication3DSecure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authentication3DSecure)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string linkedTransactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string travelFileNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public authorization authorization {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authorization)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public cardOut card1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string contractNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string resultContainer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doCaptureCompletedEventHandler(object sender, doCaptureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCaptureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCaptureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reAuthorization {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doReAuthorizationCompletedEventHandler(object sender, doReAuthorizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doReAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doReAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cardOut card {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doDebitCompletedEventHandler(object sender, doDebitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doDebitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doDebitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cardOut card1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doRefundCompletedEventHandler(object sender, doRefundCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRefundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRefundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public miscDataPair[] miscData1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((miscDataPair[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doResetCompletedEventHandler(object sender, doResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doCreditCompletedEventHandler(object sender, doCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cardOut card1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void createWalletCompletedEventHandler(object sender, createWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] contractNumberWalletList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cardOut card {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public fraudResultDetails fraudResultDetails {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fraudResultDetails)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void updateWalletCompletedEventHandler(object sender, updateWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] contractNumberWalletList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public cardOut card {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cardOut)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getWalletCompletedEventHandler(object sender, getWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string media {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public wallet wallet {
            get {
                this.RaiseExceptionIfNecessary();
                return ((wallet)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public owner owner {
            get {
                this.RaiseExceptionIfNecessary();
                return ((owner)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string isDisabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string disableDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public extendedCardType extendedCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((extendedCardType)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string[] contractNumberWalletList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getCardsCompletedEventHandler(object sender, getCardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public cards[] cardsList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cards[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public owner owner {
            get {
                this.RaiseExceptionIfNecessary();
                return ((owner)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void disableWalletCompletedEventHandler(object sender, disableWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disableWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disableWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] walletIdList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void enableWalletCompletedEventHandler(object sender, enableWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enableWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enableWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doImmediateWalletPaymentCompletedEventHandler(object sender, doImmediateWalletPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doImmediateWalletPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doImmediateWalletPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public authentication3DSecure authentication3DSecure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authentication3DSecure)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string linkedTransactionId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public authorization authorization {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authorization)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doScheduledWalletPaymentCompletedEventHandler(object sender, doScheduledWalletPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doScheduledWalletPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doScheduledWalletPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string paymentRecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doRecurrentWalletPaymentCompletedEventHandler(object sender, doRecurrentWalletPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doRecurrentWalletPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doRecurrentWalletPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string paymentRecordId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public billingRecord[] billingRecordList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingRecord[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getPaymentRecordCompletedEventHandler(object sender, getPaymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPaymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPaymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public recurring recurring {
            get {
                this.RaiseExceptionIfNecessary();
                return ((recurring)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string isDisabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string disableDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public billingRecord[] billingRecordList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingRecord[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[5]));
            }
        }
        
        /// <remarks/>
        public order order {
            get {
                this.RaiseExceptionIfNecessary();
                return ((order)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string walletId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void disablePaymentRecordCompletedEventHandler(object sender, disablePaymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disablePaymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disablePaymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void verifyEnrollmentCompletedEventHandler(object sender, verifyEnrollmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyEnrollmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyEnrollmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string transient {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mdFieldValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string actionUrl {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string actionMethod {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string pareqFieldName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string pareqFieldValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string termUrlName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string termUrlValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string mdFieldName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string mpiResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public authentication3DSecure authentication3DSecure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authentication3DSecure)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string virtualCvx {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void verifyAuthenticationCompletedEventHandler(object sender, verifyAuthenticationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyAuthenticationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyAuthenticationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string transient {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public authentication3DSecure authentication3DSecure {
            get {
                this.RaiseExceptionIfNecessary();
                return ((authentication3DSecure)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string mpiResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doScoringChequeCompletedEventHandler(object sender, doScoringChequeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doScoringChequeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doScoringChequeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public scoringCheque scoringCheque {
            get {
                this.RaiseExceptionIfNecessary();
                return ((scoringCheque)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getEncryptionKeyCompletedEventHandler(object sender, getEncryptionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEncryptionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEncryptionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public key key {
            get {
                this.RaiseExceptionIfNecessary();
                return ((key)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getMerchantSettingsCompletedEventHandler(object sender, getMerchantSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMerchantSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMerchantSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public pointOfSell[] listPointOfSell {
            get {
                this.RaiseExceptionIfNecessary();
                return ((pointOfSell[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getBalanceCompletedEventHandler(object sender, getBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public getBalanceResponseBalance balance {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getBalanceResponseBalance)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string crdproduct {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string crdprogram {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string crddesign {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getTokenCompletedEventHandler(object sender, getTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string expirationDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string maskedCardNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string virtualCard {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string cardType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string cardProduct {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string acceptanceNetwork {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string bank {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void unBlockCompletedEventHandler(object sender, unBlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unBlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unBlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void updatePaymentRecordCompletedEventHandler(object sender, updatePaymentRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePaymentRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePaymentRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public recurring recurring1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((recurring)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string isDisabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string disableDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public order order {
            get {
                this.RaiseExceptionIfNecessary();
                return ((order)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string walletId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void getBillingRecordCompletedEventHandler(object sender, getBillingRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBillingRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBillingRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public recurring recurring {
            get {
                this.RaiseExceptionIfNecessary();
                return ((recurring)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string isDisabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string disableDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public billingRecord billingRecord {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingRecord)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public order order {
            get {
                this.RaiseExceptionIfNecessary();
                return ((order)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string walletId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void updateBillingRecordCompletedEventHandler(object sender, updateBillingRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateBillingRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateBillingRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public recurring recurring {
            get {
                this.RaiseExceptionIfNecessary();
                return ((recurring)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string isDisabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string disableDate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public billingRecord billingRecord {
            get {
                this.RaiseExceptionIfNecessary();
                return ((billingRecord)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public order order {
            get {
                this.RaiseExceptionIfNecessary();
                return ((order)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string walletId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void doBankTransferCompletedEventHandler(object sender, doBankTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doBankTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doBankTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public privateData[] privateDataList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((privateData[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public transaction transaction {
            get {
                this.RaiseExceptionIfNecessary();
                return ((transaction)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    public delegate void isRegisteredCompletedEventHandler(object sender, isRegisteredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((result)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string token {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string data {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}
